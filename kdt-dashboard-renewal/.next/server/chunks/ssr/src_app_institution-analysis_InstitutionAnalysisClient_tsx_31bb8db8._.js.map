{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/GitHub/KDT_Dataset/kdt-dashboard-renewal/src/app/institution-analysis/InstitutionAnalysisClient.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useMemo } from 'react';\nimport { CourseData, InstitutionStat, AggregatedCourseData, calculateInstitutionStats, aggregateCoursesByCourseIdWithLatestInfo, getIndividualInstitutionsInGroup, calculateInstitutionDetailedRevenue } from \"@/lib/data-utils\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { formatCurrency, formatNumber, formatRevenue } from \"@/utils/formatters\";\nimport {\n  LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface GetInstitutionYearlyStatsResult {\n  studentStr: string;\n  graduateStr: string;\n  openCountStr: string;\n  operatedCourseCount: number;\n  openedCourseCount: number;\n  completionRate: string;\n  avgSatisfaction: number;\n  x: number;\n  y: number;\n  xg: number;\n  yg: number;\n  xc: number;\n  yc: number;\n}\nexport interface AggregatedCourseDataWithOpenCount extends AggregatedCourseData {\n  openedInYearCount?: number;\n}\n\ninterface InstitutionAnalysisClientProps {\n  initialInstitutionStats: InstitutionStat[];\n  availableYears: number[];\n  originalData: CourseData[];\n}\n\n// 공통 집계 함수: 기관명, 연도, 원본 row를 받아 x, y, x(y) 표기, 수료율, 과정수 등 반환\nfunction getInstitutionYearlyStats({\n  rows,\n  institutionName,\n  year,\n  month // 월 파라미터 추가\n}: {\n  rows: CourseData[];\n  institutionName: string;\n  year: number | undefined;\n  month: number | 'all'; // 월 타입 추가\n}): GetInstitutionYearlyStatsResult {\n  const filtered = rows.filter(c => {\n    const isLeadingWithPartner = c.isLeadingCompanyCourse && c.leadingCompanyPartnerInstitution;\n    if (\n      isLeadingWithPartner &&\n      c.훈련기관 === institutionName &&\n      c.훈련기관 !== c.leadingCompanyPartnerInstitution\n    ) return false;\n    return c.훈련기관 === institutionName || c.파트너기관 === institutionName;\n  });\n\n  let finalFilteredRows = filtered;\n\n  // 연도와 월이 모두 선택된 경우 해당 연도/월에 시작된 과정만 필터링\n  if (year !== undefined && month !== 'all') {\n    finalFilteredRows = filtered.filter(c => {\n      const startDate = new Date(c.과정시작일);\n      return startDate.getFullYear() === year && (startDate.getMonth() + 1) === month;\n    });\n  } else if (year !== undefined) {\n    // 연도만 선택된 경우 해당 연도에 시작된 과정과 이전 연도에 시작하여 해당 연도에 종료된 과정 포함\n    finalFilteredRows = filtered.filter(c => {\n      const startDate = new Date(c.과정시작일);\n      const endDate = new Date(c.과정종료일);\n      return startDate.getFullYear() === year || (startDate.getFullYear() < year && endDate.getFullYear() === year);\n    });\n\n    // === 수료율 계산 방식 변경 ===\n    // 1. 해당 연도에 종료된 과정만 필터링\n    const endedThisYear = filtered.filter(c => new Date(c.과정종료일).getFullYear() === year);\n    // 1-1. 수료인원이 1명 이상인 과정만 필터링\n    const endedThisYearWithGraduates = endedThisYear.filter(c => (c['수료인원'] ?? 0) > 0);\n    // 2. 분모: 해당 연도에 종료된 과정(수료인원 1명 이상)의 입과생\n    const entryForEndedThisYear = endedThisYearWithGraduates.reduce((sum, c) => sum + (c['수강신청 인원'] ?? 0), 0);\n    // 3. 분자: 해당 연도에 종료된 과정(수료인원 1명 이상)의 수료인원\n    const graduatedThisYear = endedThisYearWithGraduates.reduce((sum, c) => sum + (c['수료인원'] ?? 0), 0);\n    // 4. 수료율\n    const completionRate = entryForEndedThisYear > 0 ? (graduatedThisYear / entryForEndedThisYear) * 100 : 0;\n    const completionRateStr = `${completionRate.toFixed(1)}% (${graduatedThisYear}/${entryForEndedThisYear})`;\n\n    // 훈련생 수 표기: 올해 입과생 + (작년 입과, 올해 종료 과정의 입과생)\n    const startedThisYear = filtered.filter(c => new Date(c.과정시작일).getFullYear() === year);\n    const entryThisYear = startedThisYear.reduce((sum, c) => sum + (c['수강신청 인원'] ?? 0), 0);\n    const prevYearEntryEndedThisYear = endedThisYear\n      .filter(c => new Date(c.과정시작일).getFullYear() < year)\n      .reduce((sum, c) => sum + (c['수강신청 인원'] ?? 0), 0);\n    const entryStr = prevYearEntryEndedThisYear > 0\n      ? `${formatNumber(entryThisYear)}(${formatNumber(prevYearEntryEndedThisYear)})`\n      : `${formatNumber(entryThisYear)}`;\n\n    // 수료인원 표기: 올해 시작, 올해 종료 과정의 수료인원 + (작년 입과, 올해 종료 과정의 수료인원)\n    const gradThisYear = startedThisYear.filter(c => new Date(c.과정종료일).getFullYear() === year).reduce((sum, c) => sum + (c['수료인원'] ?? 0), 0);\n    const gradPrevYearEndedThisYear = endedThisYear\n      .filter(c => new Date(c.과정시작일).getFullYear() < year)\n      .reduce((sum, c) => sum + (c['수료인원'] ?? 0), 0);\n    const gradStr = gradPrevYearEndedThisYear > 0\n      ? `${formatNumber(gradThisYear)}(${formatNumber(gradPrevYearEndedThisYear)})`\n      : `${formatNumber(gradThisYear)}`;\n\n    // 개강 회차수 표기: 올해 시작 + (작년 시작, 올해 종료)\n    const openStartSum = startedThisYear.length;\n    const openEndSum = endedThisYear.filter(c => new Date(c.과정시작일).getFullYear() < year).length;\n    const openCountStr = openEndSum > 0\n      ? `${openStartSum}(${openEndSum})`\n      : `${openStartSum}`;\n\n    // 운영중인 과정 수: 해당 연도에 운영된 고유한 과정명 수\n    const uniqueCourseNamesForYear = new Set([...startedThisYear, ...endedThisYear].map(c => c.과정명));\n    const operatedCourseCount = uniqueCourseNamesForYear.size;\n    const openedCourseCount = openStartSum + openEndSum;\n\n    // 평균 만족도 계산 (올해 종료 과정 기준)\n    const validSatisfaction = endedThisYear.filter(c => c.만족도 && c.만족도 > 0);\n    const totalWeighted = validSatisfaction.reduce((sum, c) => sum + (c.만족도 ?? 0) * (c['수료인원'] ?? 0), 0);\n    const totalWeight = validSatisfaction.reduce((sum, c) => sum + (c['수료인원'] ?? 0), 0);\n    const avgSatisfaction = totalWeight > 0 ? totalWeighted / totalWeight : 0;\n\n    return {\n      studentStr: entryStr,\n      graduateStr: gradStr,\n      openCountStr: openCountStr,\n      operatedCourseCount,\n      openedCourseCount: openedCourseCount,\n      avgSatisfaction: parseFloat(avgSatisfaction.toFixed(1)),\n      completionRate: completionRateStr,\n      \n      x: entryThisYear,\n      y: prevYearEntryEndedThisYear,\n      xg: gradThisYear,\n      yg: gradPrevYearEndedThisYear,\n      xc: openStartSum,\n      yc: openEndSum\n    };\n  }\n\n  // 전체 연도 + 전체 월일 때는 전체 합계만 표기 (x(y) 표기 대신)\n  if (year === undefined && month === 'all') {\n    const totalStudents = finalFilteredRows.reduce((sum, c) => sum + (c['수강신청 인원'] ?? 0), 0);\n    const totalGraduates = finalFilteredRows.reduce((sum, c) => sum + (c['수료인원'] ?? 0), 0);\n    const totalCourses = finalFilteredRows.length;\n    const uniqueCourseNames = new Set(finalFilteredRows.map(c => c.과정명));\n    const validRows = finalFilteredRows.filter(c => (c['수강신청 인원'] ?? 0) > 0 && (c['수료인원'] ?? 0) > 0);\n    const validStudents = validRows.reduce((sum, c) => sum + (c['수강신청 인원'] ?? 0), 0);\n    const validGraduates = validRows.reduce((sum, c) => sum + (c['수료인원'] ?? 0), 0);\n    const completionRate = validStudents > 0 ? (validGraduates / validStudents) * 100 : 0;\n    // 평균 만족도 계산\n    const validSatisfaction = validRows.filter(c => c.만족도 && c.만족도 > 0);\n    const totalWeighted = validSatisfaction.reduce((sum, c) => sum + (c.만족도 ?? 0) * (c['수료인원'] ?? 0), 0);\n    const totalWeight = validSatisfaction.reduce((sum, c) => sum + (c['수료인원'] ?? 0), 0);\n    const avgSatisfaction = totalWeight > 0 ? totalWeighted / totalWeight : 0;\n    return {\n      studentStr: formatNumber(totalStudents),\n      graduateStr: formatNumber(totalGraduates),\n      openCountStr: formatNumber(totalCourses),\n      operatedCourseCount: uniqueCourseNames.size,\n      openedCourseCount: totalCourses,\n      completionRate: completionRate === 0 ? '-' : `${completionRate.toFixed(1)}%`,\n      avgSatisfaction: 0,\n      \n      \n      \n      \n      \n      x: totalStudents,\n      y: 0,\n      xg: totalGraduates,\n      yg: 0,\n      xc: totalCourses,\n  \n      yc: 0\n    };\n  }\n\n  const totalStudents = finalFilteredRows.reduce((sum, c) => sum + (c['수강신청 인원'] ?? 0), 0);\n  const totalGraduates = finalFilteredRows.reduce((sum, c) => sum + (c['수료인원'] ?? 0), 0);\n  const totalCourses = finalFilteredRows.length;\n  const uniqueCourseNames = new Set(finalFilteredRows.map(c => c.과정명));\n  const validRows = finalFilteredRows.filter(c => (c['수강신청 인원'] ?? 0) > 0 && (c['수료인원'] ?? 0) > 0);\n  const validStudents = validRows.reduce((sum, c) => sum + (c['수강신청 인원'] ?? 0), 0);\n  const validGraduates = validRows.reduce((sum, c) => sum + (c['수료인원'] ?? 0), 0);\n  const completionRate = validStudents > 0 ? (validGraduates / validStudents) * 100 : 0;\n\n  // x(y) 표기법을 따르지 않는 경우 (연도+월 선택 시)\n  if (year !== undefined && month !== 'all') {\n    return {\n      studentStr: `${formatNumber(totalStudents)}`,\n      graduateStr: `${formatNumber(totalGraduates)}`,\n      openCountStr: `${totalCourses}`,\n      operatedCourseCount: uniqueCourseNames.size,\n      openedCourseCount: totalCourses,\n      completionRate: completionRate === 0 ? '-' : `${completionRate.toFixed(1)}%`,\n      avgSatisfaction: 0,\n      \n      \n      \n      \n      x: totalStudents,\n      y: 0,\n      xg: totalGraduates,\n      yg: 0,\n      xc: totalCourses,\n      yc: 0\n    };\n  }\n\n  // 기존 x(y) 표기법 로직 (연도만 선택되거나 전체 기간일 때)\n  const startRows = filtered.filter(c => new Date(c.과정시작일).getFullYear() === year);\n  const endRows = filtered.filter(c => new Date(c.과정시작일).getFullYear() !== year && new Date(c.과정종료일).getFullYear() === year);\n  const startSum = startRows.reduce((sum, c) => sum + (c['수강신청 인원'] ?? 0), 0);\n  const endSum = endRows.reduce((sum, c) => sum + (c['수강신청 인원'] ?? 0), 0);\n  const gradStartSum = startRows.reduce((sum, c) => sum + (c['수료인원'] ?? 0), 0);\n  const gradEndSum = endRows.reduce((sum, c) => sum + (c['수료인원'] ?? 0), 0);\n  const openStartSum = startRows.length;\n  const openEndSum = endRows.length;\n\n  const studentStr = startSum > 0 && endSum > 0 ? `${formatNumber(startSum)}(${formatNumber(endSum)})` : startSum > 0 ? `${formatNumber(startSum)}` : endSum > 0 ? `(${formatNumber(endSum)})` : '';\n  const graduateStr = gradStartSum > 0 && gradEndSum > 0 ? `${formatNumber(gradStartSum)}(${formatNumber(gradEndSum)})` : gradStartSum > 0 ? `${formatNumber(gradStartSum)}` : gradEndSum > 0 ? `(${formatNumber(gradEndSum)})` : '';\n  const openCountStr = openStartSum > 0 && openEndSum > 0 ? `${openStartSum}(${openEndSum})` : openStartSum > 0 ? `${openStartSum}` : openEndSum > 0 ? `(${openEndSum})` : '';\n\n  // 운영중인 과정 수: 해당 연도에 운영된 고유한 과정명 수\n  const uniqueCourseNamesForYear = new Set([...startRows, ...endRows].map(c => c.과정명));\n  const operatedCourseCount = uniqueCourseNamesForYear.size;\n  const openedCourseCount = openStartSum + openEndSum; // 개강 과정 수: 올해 개강 + 작년 개강/올해 종료 (회차 수)\n  const validRowsForCompletion = [...startRows, ...endRows].filter(c => (c['수강신청 인원'] ?? 0) > 0 && (c['수료인원'] ?? 0) > 0);\n  const validStudentsForCompletion = validRowsForCompletion.reduce((sum, c) => sum + (c['수강신청 인원'] ?? 0), 0);\n  const validGraduatesForCompletion = validRowsForCompletion.reduce((sum, c) => sum + (c['수료인원'] ?? 0), 0);\n  const completionRateForYear = validStudentsForCompletion > 0 ? (validGraduatesForCompletion / validStudentsForCompletion) * 100 : 0;\n\n  // 평균 만족도 계산\n  const validSatisfaction = [...startRows, ...endRows].filter(c => c.만족도 && c.만족도 > 0);\n  const totalWeighted = validSatisfaction.reduce((sum, c) => sum + (c.만족도 ?? 0) * (c['수료인원'] ?? 0), 0);\n  const totalWeight = validSatisfaction.reduce((sum, c) => sum + (c['수료인원'] ?? 0), 0);\n  const avgSatisfaction = totalWeight > 0 ? totalWeighted / totalWeight : 0;\n\n  return {\n    studentStr,\n    graduateStr,\n    openCountStr, // x<br/>(y) 표기\n    operatedCourseCount, // 운영 과정 수\n    openedCourseCount: openedCourseCount,\n      avgSatisfaction: parseFloat(avgSatisfaction.toFixed(1)),\n    completionRate: completionRateForYear === 0 ? '-' : `${completionRateForYear.toFixed(1)}%`,\n    \n    x: startSum,\n    y: endSum,\n    xg: gradStartSum,\n    yg: gradEndSum,\n    xc: openStartSum,\n    yc: openEndSum\n  };\n}\n\nexport default function InstitutionAnalysisClient({ initialInstitutionStats, availableYears, originalData }: InstitutionAnalysisClientProps) {\n  const [institutionStats, setInstitutionStats] = useState<InstitutionStat[]>(initialInstitutionStats);\n  const [filteredInstitutionStats, setFilteredInstitutionStats] = useState<InstitutionStat[]>(initialInstitutionStats);\n  const [selectedYear, setSelectedYear] = useState<number | 'all'>('all');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedInstitutionCourses, setSelectedInstitutionCourses] = useState<AggregatedCourseDataWithOpenCount[]>([]);\n  const [selectedInstitutionName, setSelectedInstitutionName] = useState<string>('');\n  const [filterType, setFilterType] = useState<'all' | 'leading' | 'tech'>('all');\n  const [selectedMonth, setSelectedMonth] = useState<number | 'all'>('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedInstitutionRawCourses, setSelectedInstitutionRawCourses] = useState<CourseData[]>([]);\n  \n  const [isGroupModalOpen, setIsGroupModalOpen] = useState(false);\n  const [selectedGroupName, setSelectedGroupName] = useState<string>('');\n  const [individualInstitutions, setIndividualInstitutions] = useState<InstitutionStat[]>([]);\n\n  const isNewTechCourse = (course: CourseData) => !course.isLeadingCompanyCourse;\n\n  // 필터링 로직을 useMemo로 감싸 성능 최적화\n  useEffect(() => {\n    let currentFilteredStats = initialInstitutionStats;\n\n    // 유형 필터링\n    if (filterType === 'leading') {\n      currentFilteredStats = currentFilteredStats.filter((stat) =>\n        stat.courses.some((c) => c.isLeadingCompanyCourse)\n      );\n    } else if (filterType === 'tech') {\n      currentFilteredStats = currentFilteredStats.filter((stat) =>\n        stat.courses.some((c) => isNewTechCourse(c))\n      );\n    }\n\n    // 연도 및 월 필터링 (서버에서 이미 연도별로 계산된 통계를 사용)\n    // 클라이언트에서는 selectedYear와 selectedMonth에 따라 initialInstitutionStats를 다시 필터링\n    if (selectedYear !== 'all' || selectedMonth !== 'all') {\n      currentFilteredStats = initialInstitutionStats.filter(stat => {\n        // stat.courses는 해당 기관의 모든 과정 데이터를 포함하고 있음\n        // 이 과정들을 다시 필터링하여 선택된 연도와 월에 해당하는 통계를 계산해야 함\n        const filteredCoursesForStat = stat.courses.filter(course => {\n          const courseStartDate = new Date(course.과정시작일);\n          const courseEndDate = new Date(course.과정종료일);\n          \n          let yearMatch = true;\n          if (selectedYear !== 'all') {\n            yearMatch = courseStartDate.getFullYear() === selectedYear || (courseStartDate.getFullYear() < selectedYear && courseEndDate.getFullYear() === selectedYear);\n          }\n\n          let monthMatch = true;\n          if (selectedMonth !== 'all') {\n            monthMatch = (courseStartDate.getMonth() + 1) === selectedMonth;\n          }\n          return yearMatch && monthMatch;\n        });\n\n        // 필터링된 과정이 없으면 해당 기관은 제외\n        if (filteredCoursesForStat.length === 0) return false;\n\n        // 필터링된 과정으로 해당 기관의 통계를 다시 계산\n        const reCalculatedStats = getInstitutionYearlyStats({\n          rows: filteredCoursesForStat,\n          institutionName: stat.institutionName,\n          year: selectedYear === 'all' ? undefined : selectedYear,\n          month: selectedMonth\n        });\n\n        // 기존 stat 객체를 업데이트 (매출액은 서버에서 계산된 값을 유지)\n        stat.totalCourses = reCalculatedStats.operatedCourseCount;\n        stat.totalStudents = reCalculatedStats.x + reCalculatedStats.y;\n        stat.completedStudents = reCalculatedStats.xg + reCalculatedStats.yg;\n        stat.completionRate = parseFloat(reCalculatedStats.completionRate.replace('%', ''));\n        stat.avgSatisfaction = reCalculatedStats.avgSatisfaction;\n        \n        return true; // 필터링된 과정이 있으면 포함\n      });\n    }\n\n    // 검색어 필터링\n    const finalFiltered = currentFilteredStats.filter(stat => \n      stat.institutionName.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    // 매출액 기준으로 다시 정렬\n    finalFiltered.sort((a, b) => b.totalRevenue - a.totalRevenue);\n\n    setFilteredInstitutionStats(finalFiltered);\n  }, [selectedYear, filterType, selectedMonth, searchTerm, initialInstitutionStats]);\n\n  const handleViewDetails = (institutionName: string) => {\n    setSelectedInstitutionName(institutionName);\n    \n    let filteredOriginalData = originalData;\n    \n    if (filterType === 'leading') {\n      filteredOriginalData = filteredOriginalData.filter((c) => c.isLeadingCompanyCourse);\n    } else if (filterType === 'tech') {\n      filteredOriginalData = filteredOriginalData.filter(isNewTechCourse);\n    }\n    \n    if (selectedMonth !== 'all') {\n      filteredOriginalData = filteredOriginalData.filter(course => {\n        const courseStartDate = new Date(course.과정시작일);\n        return (courseStartDate.getMonth() + 1) === selectedMonth;\n      });\n    }\n    \n    const yearForCalculation = selectedYear === 'all' ? undefined : selectedYear;\n    const detailedStats = calculateInstitutionDetailedRevenue(originalData, institutionName, yearForCalculation);\n    \n    const aggregated = aggregateCoursesByCourseIdWithLatestInfo(detailedStats.courses, yearForCalculation, institutionName);\n    \n    setSelectedInstitutionCourses(aggregated as any);\n    setSelectedInstitutionRawCourses(detailedStats.courses);\n    setIsModalOpen(true);\n  };\n\n  const handleViewGroupDetails = (groupName: string) => {\n    setSelectedGroupName(groupName);\n    \n    let filteredOriginalData = originalData;\n    \n    if (filterType === 'leading') {\n      filteredOriginalData = filteredOriginalData.filter((c) => c.isLeadingCompanyCourse);\n    } else if (filterType === 'tech') {\n      filteredOriginalData = filteredOriginalData.filter(isNewTechCourse);\n    }\n    \n    if (selectedMonth !== 'all') {\n      filteredOriginalData = filteredOriginalData.filter(course => {\n        const courseStartDate = new Date(course.과정시작일);\n        return (courseStartDate.getMonth() + 1) === selectedMonth;\n      });\n    }\n    \n    const individualStats = getIndividualInstitutionsInGroup(\n      filteredOriginalData,\n      groupName,\n      selectedYear === 'all' ? undefined : selectedYear\n    );\n    \n    setIndividualInstitutions(individualStats);\n    setIsGroupModalOpen(true);\n  };\n\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-2xl font-bold mb-6\">훈련기관별 분석</h1>\n\n      {/* 연도 선택 */}\n      <div className=\"mb-10 relative z-10 flex gap-6 items-end\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">연도 선택</label>\n          <Select\n            value={selectedYear.toString()}\n            onValueChange={(value) => setSelectedYear(value === 'all' ? 'all' : parseInt(value))}\n          >\n            <SelectTrigger className=\"w-[180px] bg-white\">\n              <SelectValue placeholder=\"연도 선택\" />\n            </SelectTrigger>\n            <SelectContent className=\"bg-white z-20\">\n              <SelectItem value=\"all\">전체 연도</SelectItem>\n              {availableYears.map((year) => (\n                <SelectItem key={year} value={year.toString()}>{year}년</SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        {/* 월 선택 */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">월 선택</label>\n          <Select\n            value={selectedMonth.toString()}\n            onValueChange={(value) => setSelectedMonth(value === 'all' ? 'all' : parseInt(value))}\n          >\n            <SelectTrigger className=\"w-[180px] bg-white\">\n              <SelectValue placeholder=\"월 선택\" />\n            </SelectTrigger>\n            <SelectContent className=\"bg-white z-20\">\n              <SelectItem value=\"all\">전체 월</SelectItem>\n              {[...Array(12)].map((_, i) => (\n                <SelectItem key={i + 1} value={(i + 1).toString()}>{i + 1}월</SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        {/* 유형 필터 */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">유형 필터</label>\n          <Select value={filterType} onValueChange={(v) => setFilterType(v as any)}>\n            <SelectTrigger className=\"w-[200px] bg-white\">\n              <SelectValue placeholder=\"유형 선택\" />\n            </SelectTrigger>\n            <SelectContent className=\"bg-white z-20\">\n              <SelectItem value=\"all\">전체</SelectItem>\n              <SelectItem value=\"leading\">선도기업 과정만</SelectItem>\n              <SelectItem value=\"tech\">신기술 과정만</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n\n        {/* 검색창 추가 */}\n        <div>\n          <label htmlFor=\"search\" className=\"block text-sm font-medium text-gray-700 mb-2\">훈련기관 검색</label>\n          <input\n            id=\"search\"\n            type=\"text\"\n            placeholder=\"기관명 검색...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-[200px] bg-white p-2 border border-gray-300 rounded-md\"\n          />\n        </div>\n      </div>\n\n      {/* 안내 문구 추가 */}\n      <div className=\"mb-4 text-sm text-blue-700 bg-blue-50 border border-blue-200 rounded px-4 py-2\">\n        ※ 과정이 2개년도에 걸쳐있는 경우, 각 년도에 차지하는 비율에 맞추어 매출이 분배됩니다.\n      </div>\n\n      {/* 매출액 차트 */}\n      <div className=\"bg-white rounded-lg shadow p-6 mt-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">훈련기관별 매출액 (억원)</h3>\n        <div className=\"h-[400px]\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart data={filteredInstitutionStats.slice(0, 10)}>\n              <XAxis\n                dataKey=\"institutionName\"\n                angle={0}\n                textAnchor=\"middle\"\n                height={100}\n                tick={{ fontSize: 14 }}\n                interval={0}\n                tickFormatter={(value: string, index: number) => {\n                  const rank = index + 1;\n                  let displayValue = `${value}`;\n                  if (value === '주식회사 코드스테이츠') {\n                    displayValue += ' (2023년 감사를 통해 훈련비 전액 반환)';\n                  }\n                  if (displayValue.length > 15) {\n                    displayValue = displayValue.substring(0, 12) + '...';\n                  }\n                  return `🏅 ${rank}위\\n${displayValue}`;\n                }}\n                dy={20}\n              />\n              <YAxis \n                tickFormatter={formatRevenue}\n                tick={{ fontSize: 12 }}\n              />\n              <Tooltip \n                formatter={(value: number) => [formatRevenue(value), '매출액']}\n                labelFormatter={(label) => {\n                  let institutionName = label.replace(/\\d+\\. /, '').replace(/ \\(2023년 감사를 통해 훈련비 전액 반환\\)/, '');\n                  if (institutionName === '주식회사 코드스테이츠') {\n                      return `기관명: ${institutionName} (2023년 감사를 통해 훈련비 전액 반환)`;\n                  }\n                  return `기관명: ${institutionName}`;\n                }}\n              />\n              <Bar dataKey=\"totalRevenue\" fill=\"#4F46E5\" name=\"매출액\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n\n      {/* 안내 문구 */}\n      {selectedYear !== 'all' && (\n        <div className=\"mb-4 text-sm text-gray-600 bg-gray-50 border border-gray-200 rounded px-4 py-3\">\n          <div>* 수료율은 과정 종료일 기준으로 계산하였으며, 분자는 {selectedYear}년 기준 {selectedYear}년의 수료생, 분모는 {selectedYear}년 기준 {selectedYear}년에 끝나는 과정이 있는 모든 과정의 입과생입니다.</div>\n          <div>* ()는 전 해년 입과, 당 해년 수료 인원을 표기하였습니다.</div>\n        </div>\n      )}\n\n      {/* 상세 통계 테이블 */}\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">순위 및 훈련기관</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">매출액</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">훈련과정 수</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">훈련생 수</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">수료인원</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">수료율</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">평균 만족도</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">상세</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {filteredInstitutionStats.map((stat, index) => (\n                <tr key={stat.institutionName}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center\">\n                      <div className=\"ml-4\">\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {index + 1}. {stat.institutionName}\n                          {stat.institutionName === '주식회사 코드스테이츠' && (\n                            <span className=\"ml-2 text-xs text-red-600\">(2023년 감사를 통해 훈련비 전액 반환)</span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">{formatRevenue(stat.totalRevenue)}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {(() => {\n                      const filteredRows = originalData.filter((c) => {\n                        if (filterType === 'leading') return c.isLeadingCompanyCourse;\n                        if (filterType === 'tech') return !c.isLeadingCompanyCourse;\n                        return true;\n                      });\n                      const stats = getInstitutionYearlyStats({\n                        rows: filteredRows,\n                        institutionName: stat.institutionName,\n                        year: selectedYear === 'all' ? undefined : selectedYear,\n                        month: selectedMonth\n                      });\n                      return <span dangerouslySetInnerHTML={{__html: stats.openCountStr}} />;\n                    })()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {(() => {\n                      const filteredRows = originalData.filter((c) => {\n                        if (filterType === 'leading') return c.isLeadingCompanyCourse;\n                        if (filterType === 'tech') return !c.isLeadingCompanyCourse;\n                        return true;\n                      });\n                      const stats = getInstitutionYearlyStats({\n                        rows: filteredRows,\n                        institutionName: stat.institutionName,\n                        year: selectedYear === 'all' ? undefined : selectedYear,\n                        month: selectedMonth\n                      });\n                      return <span dangerouslySetInnerHTML={{__html: stats.studentStr}} />;\n                    })()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {(() => {\n                      const filteredRows = originalData.filter((c) => {\n                        if (filterType === 'leading') return c.isLeadingCompanyCourse;\n                        if (filterType === 'tech') return !c.isLeadingCompanyCourse;\n                        return true;\n                      });\n                      const stats = getInstitutionYearlyStats({\n                        rows: filteredRows,\n                        institutionName: stat.institutionName,\n                        year: selectedYear === 'all' ? undefined : selectedYear,\n                        month: selectedMonth\n                      });\n                      return <span dangerouslySetInnerHTML={{__html: stats.graduateStr}} />;\n                    })()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">{(() => {\n                    const filteredRows = originalData.filter((c) => {\n                      if (filterType === 'leading') return c.isLeadingCompanyCourse;\n                      if (filterType === 'tech') return !c.isLeadingCompanyCourse;\n                      return true;\n                    });\n                    const stats = getInstitutionYearlyStats({\n                      rows: filteredRows,\n                      institutionName: stat.institutionName,\n                      year: selectedYear === 'all' ? undefined : selectedYear,\n                      month: selectedMonth\n                    });\n                    return stats.completionRate;\n                  })()}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">{(() => {\n                    const filteredRows = originalData.filter((c) => {\n                      if (filterType === 'leading') return c.isLeadingCompanyCourse;\n                      if (filterType === 'tech') return !c.isLeadingCompanyCourse;\n                      return true;\n                    });\n                    const stats = getInstitutionYearlyStats({\n                      rows: filteredRows,\n                      institutionName: stat.institutionName,\n                      year: selectedYear === 'all' ? undefined : selectedYear,\n                      month: selectedMonth\n                    });\n                    return (typeof stats.avgSatisfaction === 'number' && !isNaN(stats.avgSatisfaction)) ? stats.avgSatisfaction.toFixed(1) : '-';\n                  })()}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <div className=\"flex items-center space-x-2\">\n                        <button\n                          onClick={() => handleViewDetails(stat.institutionName)}\n                          className=\"text-indigo-600 hover:text-indigo-900\"\n                          style={{\n                            backgroundColor: '#E0E7FF',\n                            color: '#4338CA',\n                            fontWeight: '500',\n                            padding: '0.25rem 0.5rem',\n                            borderRadius: '0.375rem',\n                            border: '1px solid #C7D2FE'\n                          }}\n                        >\n                          상세 보기\n                        </button>\n                        {['이젠아카데미', '그린컴퓨터아카데미', '더조은아카데미', '코리아IT아카데미', '비트교육센터', '하이미디어', '아이티윌', '메가스터디', '에이콘아카데미', '한국ICT인재개발원', 'MBC아카데미 컴퓨터 교육센터', '쌍용아카데미', 'KH정보교육원', '(주)솔데스크'].includes(stat.institutionName) && (\n                          <button\n                            onClick={() => handleViewGroupDetails(stat.institutionName)}\n                            className=\"text-green-600 hover:text-green-900\"\n                            style={{\n                              backgroundColor: '#D1FAE5',\n                              color: '#065F46',\n                              fontWeight: '500',\n                              padding: '0.25rem 0.5rem',\n                              borderRadius: '0.375rem',\n                              border: '1px solid #A7F3D0',\n                              fontSize: '0.75rem'\n                            }}\n                          >\n                            ▽ 개별기관\n                          </button>\n                        )}\n                      </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* 상세 모달 */}\n      <Dialog\n        open={isModalOpen}\n        onOpenChange={setIsModalOpen}\n      >\n        <DialogContent className=\"mx-auto max-w-[80vw] max-h-[85vh] w-full bg-white rounded-xl shadow-lg p-0 overflow-y-auto\">\n          <DialogHeader className=\"p-6 border-b\">\n            <DialogTitle className=\"text-lg font-medium leading-6 text-gray-900\">\n              {selectedInstitutionName} - 훈련과정 상세\n              {selectedYear !== 'all' && ` (${selectedYear}년)`}\n            </DialogTitle>\n            <DialogDescription>\n              선택된 훈련기관의 {selectedYear === 'all' ? '모든' : `${selectedYear}년`} 훈련과정 목록입니다. (매출액 기준 내림차순 정렬)\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"p-6\">\n            {/* 통계 요약 */}\n            <div className=\"grid grid-cols-5 gap-4 mb-6\">\n              {(() => {\n                const filteredRows = originalData.filter((c) => {\n                  if (filterType === 'leading') return c.isLeadingCompanyCourse;\n                  if (filterType === 'tech') return !c.isLeadingCompanyCourse;\n                  return true;\n                });\n                const stats = getInstitutionYearlyStats({\n                  rows: filteredRows,\n                  institutionName: selectedInstitutionName,\n                  year: selectedYear === 'all' ? undefined : selectedYear,\n                  month: selectedMonth\n                });\n                return (\n                  <>\n                    <div className=\"bg-gray-50 p-4 rounded-lg\">\n                      <div className=\"text-sm text-gray-500\">운영 중인 과정 수</div>\n                      <div className=\"text-lg font-semibold\">{stats.operatedCourseCount}</div>\n                    </div>\n                    <div className=\"bg-gray-50 p-4 rounded-lg\">\n                      <div className=\"text-sm text-gray-500\">{selectedYear === 'all' ? '전체 개강 회차수' : `${selectedYear}년 개강 회차수`}</div>\n                      <div className=\"text-lg font-semibold\">{stats.openedCourseCount}</div>\n                    </div>\n                    <div className=\"bg-gray-50 p-4 rounded-lg\">\n                      <div className=\"text-sm text-gray-500\">훈련생 수</div>\n                      <div className=\"text-lg font-semibold\">{stats.studentStr}</div>\n                    </div>\n                    <div className=\"bg-gray-50 p-4 rounded-lg\">\n                      <div className=\"text-sm text-gray-500\">수료인원</div>\n                      <div className=\"text-lg font-semibold\">{stats.graduateStr}</div>\n                    </div>\n                    <div className=\"bg-gray-50 p-4 rounded-lg\">\n                      <div className=\"text-sm text-gray-500\">평균 수료율</div>\n                      <div className=\"text-lg font-semibold\">{stats.completionRate}</div>\n                    </div>\n                  </>\n                );\n              })()}\n            </div>\n            <div className=\"overflow-x-auto max-h-[65vh]\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50 sticky top-0\">\n                  <tr>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[25%]\">과정명</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[10%]\">훈련유형</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[10%]\">훈련생 수</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[10%]\">수료인원</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[10%]\">수료율</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[10%]\">매출액</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[10%]\">만족도</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[10%]\">개강 회차수</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {selectedInstitutionCourses.map((course: any) => (\n                    <tr key={course['훈련과정 ID']} className=\"hover:bg-gray-50\">\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">{course.과정명}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{course.훈련유형들?.join(', ') || '-'}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{course.studentsStr}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{course.graduatesStr}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{course.평균수료율.toFixed(1)}% ({course.총수료인원}/{course.총수강신청인원})</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{formatRevenue(course.총누적매출)}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{course.평균만족도.toFixed(1)}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{course.openCountStr}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div className=\"bg-gray-50 px-6 py-3 flex justify-end\">\n            <button\n              type=\"button\"\n              className=\"bg-white px-4 py-2 text-sm font-medium text-gray-700 border border-gray-300 rounded-md hover:bg-gray-50\"\n              onClick={() => setIsModalOpen(false)}\n            >\n              닫기\n            </button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* 개별 기관 정보 모달 */}\n      <Dialog\n        open={isGroupModalOpen}\n        onOpenChange={setIsGroupModalOpen}\n      >\n        <DialogContent className=\"mx-auto max-w-[80vw] max-h-[85vh] w-full bg-white rounded-xl shadow-lg p-0 overflow-y-auto\">\n          <DialogHeader className=\"p-6 border-b\">\n            <DialogTitle className=\"text-lg font-medium leading-6 text-gray-900\">\n              {selectedGroupName} - 개별 기관 상세\n              {selectedYear !== 'all' && ` (${selectedYear}년)`}\n            </DialogTitle>\n            <DialogDescription>\n              {selectedGroupName} 그룹에 속하는 개별 기관들의 상세 정보입니다. (매출액 기준 내림차순 정렬)\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"p-6\">\n            <div className=\"overflow-x-auto max-h-[65vh]\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50 sticky top-0\">\n                  <tr>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">순위</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">기관명</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">매출액</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">훈련과정 수</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">훈련생 수</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">수료인원</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">수료율</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">평균 만족도</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {individualInstitutions.map((institution, index) => (\n                    <tr key={institution.institutionName} className=\"hover:bg-gray-50\">\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900 font-medium\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">\n                        {institution.institutionName}\n                      </td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{formatRevenue(institution.totalRevenue)}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{formatNumber(institution.totalCourses)}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">\n                        {selectedYear !== 'all' && selectedMonth === 'all' && institution.prevYearStudents > 0\n                          ? (\n                            <div>\n                              <div>{formatNumber(institution.totalStudents)}</div>\n                              <div className=\"text-xs text-gray-500\">({formatNumber(institution.prevYearStudents)})</div>\n                            </div>\n                          )\n                          : formatNumber(institution.totalStudents)\n                        }\n                      </td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">\n                        {selectedYear !== 'all' && selectedMonth === 'all' && institution.prevYearCompletedStudents > 0\n                          ? (\n                            <div>\n                              <div>{formatNumber(institution.completedStudents)}</div>\n                              <div className=\"text-xs text-gray-500\">({formatNumber(institution.prevYearCompletedStudents)})</div>\n                            </div>\n                          )\n                          : formatNumber(institution.completedStudents)\n                        }\n                      </td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{institution.completionRate.toFixed(1)}%</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{institution.avgSatisfaction.toFixed(1)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div className=\"bg-gray-50 px-6 py-3 flex justify-end\">\n            <button\n              type=\"button\"\n              className=\"bg-white px-4 py-2 text-sm font-medium text-gray-700 border border-gray-300 rounded-md hover:bg-gray-50\"\n              onClick={() => setIsGroupModalOpen(false)}\n            >\n              닫기\n            </button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\n// Custom Tick 컴포넌트 (필요시 사용)\nconst CustomTick = (props: any) => {\n  const { x, y, payload, index } = props;\n  const value = payload.value;\n  const rank = index + 1;\n  let displayValue = `${value}`;\n  if (value === '주식회사 코드스테이츠') {\n    displayValue += ' (2023년 감사를 통해 훈련비 전액 반환)';\n  }\n  if (displayValue.length > 15) {\n    displayValue = displayValue.substring(0, 12) + '...';\n  }\n\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text x={0} y={0} dy={16} textAnchor=\"middle\" fill=\"#666\" fontSize={10}>\n        <tspan x={0} dy=\"-1.2em\">🥇 ${rank}위</tspan>\n        <tspan x={0} dy=\"1.2em\">{displayValue}</tspan>\n      </text>\n    </g>\n  );\n};"],"names":[],"mappings":"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","debugId":null}}]
}