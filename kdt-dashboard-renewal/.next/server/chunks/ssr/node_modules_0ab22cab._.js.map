{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/GitHub/KDT_Dataset/kdt-dashboard-renewal/node_modules/papaparse/papaparse.js"],"sourcesContent":["/* @license\nPapa Parse\nv5.5.3\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n\n(function(root, factory)\n{\n\t/* globals define */\n\tif (typeof define === 'function' && define.amd)\n\t{\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t}\n\telse if (typeof module === 'object' && typeof exports !== 'undefined')\n\t{\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t}\n\telse\n\t{\n\t\t// Browser globals (root is window)\n\t\troot.Papa = factory();\n\t}\n\t// in strict mode we cannot access arguments.callee, so we need a named reference to\n\t// stringify the factory method for the blob worker\n\t// eslint-disable-next-line func-name\n}(this, function moduleFactory()\n{\n\t'use strict';\n\n\tvar global = (function() {\n\t\t// alternative method, similar to `Function('return this')()`\n\t\t// but without using `eval` (which is disabled when\n\t\t// using Content Security Policy).\n\n\t\tif (typeof self !== 'undefined') { return self; }\n\t\tif (typeof window !== 'undefined') { return window; }\n\t\tif (typeof global !== 'undefined') { return global; }\n\n\t\t// When running tests none of the above have been defined\n\t\treturn {};\n\t})();\n\n\n\tfunction getWorkerBlob() {\n\t\tvar URL = global.URL || global.webkitURL || null;\n\t\tvar code = moduleFactory.toString();\n\t\treturn Papa.BLOB_URL || (Papa.BLOB_URL = URL.createObjectURL(new Blob([\"var global = (function() { if (typeof self !== 'undefined') { return self; } if (typeof window !== 'undefined') { return window; } if (typeof global !== 'undefined') { return global; } return {}; })(); global.IS_PAPA_WORKER=true; \", '(', code, ')();'], {type: 'text/javascript'})));\n\t}\n\n\tvar IS_WORKER = !global.document && !!global.postMessage,\n\t\tIS_PAPA_WORKER = global.IS_PAPA_WORKER || false;\n\n\tvar workers = {}, workerIdCounter = 0;\n\n\tvar Papa = {};\n\n\tPapa.parse = CsvToJson;\n\tPapa.unparse = JsonToCsv;\n\n\tPapa.RECORD_SEP = String.fromCharCode(30);\n\tPapa.UNIT_SEP = String.fromCharCode(31);\n\tPapa.BYTE_ORDER_MARK = '\\ufeff';\n\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\n\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\n\tPapa.NODE_STREAM_INPUT = 1;\n\n\t// Configurable chunk sizes for local and remote files, respectively\n\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\n\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\n\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\n\n\t// Exposed for testing and development only\n\tPapa.Parser = Parser;\n\tPapa.ParserHandle = ParserHandle;\n\tPapa.NetworkStreamer = NetworkStreamer;\n\tPapa.FileStreamer = FileStreamer;\n\tPapa.StringStreamer = StringStreamer;\n\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n\t\tPapa.DuplexStreamStreamer = DuplexStreamStreamer;\n\t}\n\n\tif (global.jQuery)\n\t{\n\t\tvar $ = global.jQuery;\n\t\t$.fn.parse = function(options)\n\t\t{\n\t\t\tvar config = options.config || {};\n\t\t\tvar queue = [];\n\n\t\t\tthis.each(function(idx)\n\t\t\t{\n\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\n\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\n\t\t\t\t\t\t\t\t&& global.FileReader;\n\n\t\t\t\tif (!supported || !this.files || this.files.length === 0)\n\t\t\t\t\treturn true;\t// continue to next input element\n\n\t\t\t\tfor (var i = 0; i < this.files.length; i++)\n\t\t\t\t{\n\t\t\t\t\tqueue.push({\n\t\t\t\t\t\tfile: this.files[i],\n\t\t\t\t\t\tinputElem: this,\n\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tparseNextFile();\t// begin parsing\n\t\t\treturn this;\t\t// maintains chainability\n\n\n\t\t\tfunction parseNextFile()\n\t\t\t{\n\t\t\t\tif (queue.length === 0)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(options.complete))\n\t\t\t\t\t\toptions.complete();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar f = queue[0];\n\n\t\t\t\tif (isFunction(options.before))\n\t\t\t\t{\n\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\n\n\t\t\t\t\tif (typeof returned === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (returned.action === 'abort')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\n\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (returned.action === 'skip')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeof returned.config === 'object')\n\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\n\t\t\t\t\t}\n\t\t\t\t\telse if (returned === 'skip')\n\t\t\t\t\t{\n\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\n\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\n\t\t\t\tf.instanceConfig.complete = function(results)\n\t\t\t\t{\n\t\t\t\t\tif (isFunction(userCompleteFunc))\n\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\n\t\t\t\t\tfileComplete();\n\t\t\t\t};\n\n\t\t\t\tPapa.parse(f.file, f.instanceConfig);\n\t\t\t}\n\n\t\t\tfunction error(name, file, elem, reason)\n\t\t\t{\n\t\t\t\tif (isFunction(options.error))\n\t\t\t\t\toptions.error({name: name}, file, elem, reason);\n\t\t\t}\n\n\t\t\tfunction fileComplete()\n\t\t\t{\n\t\t\t\tqueue.splice(0, 1);\n\t\t\t\tparseNextFile();\n\t\t\t}\n\t\t};\n\t}\n\n\n\tif (IS_PAPA_WORKER)\n\t{\n\t\tglobal.onmessage = workerThreadReceivedMessage;\n\t}\n\n\n\n\n\tfunction CsvToJson(_input, _config)\n\t{\n\t\t_config = _config || {};\n\t\tvar dynamicTyping = _config.dynamicTyping || false;\n\t\tif (isFunction(dynamicTyping)) {\n\t\t\t_config.dynamicTypingFunction = dynamicTyping;\n\t\t\t// Will be filled on first row call\n\t\t\tdynamicTyping = {};\n\t\t}\n\t\t_config.dynamicTyping = dynamicTyping;\n\n\t\t_config.transform = isFunction(_config.transform) ? _config.transform : false;\n\n\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\n\t\t{\n\t\t\tvar w = newWorker();\n\n\t\t\tw.userStep = _config.step;\n\t\t\tw.userChunk = _config.chunk;\n\t\t\tw.userComplete = _config.complete;\n\t\t\tw.userError = _config.error;\n\n\t\t\t_config.step = isFunction(_config.step);\n\t\t\t_config.chunk = isFunction(_config.chunk);\n\t\t\t_config.complete = isFunction(_config.complete);\n\t\t\t_config.error = isFunction(_config.error);\n\t\t\tdelete _config.worker;\t// prevent infinite loop\n\n\t\t\tw.postMessage({\n\t\t\t\tinput: _input,\n\t\t\t\tconfig: _config,\n\t\t\t\tworkerId: w.id\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar streamer = null;\n\t\tif (_input === Papa.NODE_STREAM_INPUT && typeof PAPA_BROWSER_CONTEXT === 'undefined')\n\t\t{\n\t\t\t// create a node Duplex stream for use\n\t\t\t// with .pipe\n\t\t\tstreamer = new DuplexStreamStreamer(_config);\n\t\t\treturn streamer.getStream();\n\t\t}\n\t\telse if (typeof _input === 'string')\n\t\t{\n\t\t\t_input = stripBom(_input);\n\t\t\tif (_config.download)\n\t\t\t\tstreamer = new NetworkStreamer(_config);\n\t\t\telse\n\t\t\t\tstreamer = new StringStreamer(_config);\n\t\t}\n\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\n\t\t{\n\t\t\tstreamer = new ReadableStreamStreamer(_config);\n\t\t}\n\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\n\t\t\tstreamer = new FileStreamer(_config);\n\n\t\treturn streamer.stream(_input);\n\n\t\t// Strip character from UTF-8 BOM encoded files that cause issue parsing the file\n\t\tfunction stripBom(string) {\n\t\t\tif (string.charCodeAt(0) === 0xfeff) {\n\t\t\t\treturn string.slice(1);\n\t\t\t}\n\t\t\treturn string;\n\t\t}\n\t}\n\n\n\n\n\n\n\tfunction JsonToCsv(_input, _config)\n\t{\n\t\t// Default configuration\n\n\t\t/** whether to surround every datum with quotes */\n\t\tvar _quotes = false;\n\n\t\t/** whether to write headers */\n\t\tvar _writeHeader = true;\n\n\t\t/** delimiting character(s) */\n\t\tvar _delimiter = ',';\n\n\t\t/** newline character(s) */\n\t\tvar _newline = '\\r\\n';\n\n\t\t/** quote character */\n\t\tvar _quoteChar = '\"';\n\n\t\t/** escaped quote character, either \"\" or <config.escapeChar>\" */\n\t\tvar _escapedQuote = _quoteChar + _quoteChar;\n\n\t\t/** whether to skip empty lines */\n\t\tvar _skipEmptyLines = false;\n\n\t\t/** the columns (keys) we expect when we unparse objects */\n\t\tvar _columns = null;\n\n\t\t/** whether to prevent outputting cells that can be parsed as formulae by spreadsheet software (Excel and LibreOffice) */\n\t\tvar _escapeFormulae = false;\n\n\t\tunpackConfig();\n\n\t\tvar quoteCharRegex = new RegExp(escapeRegExp(_quoteChar), 'g');\n\n\t\tif (typeof _input === 'string')\n\t\t\t_input = JSON.parse(_input);\n\n\t\tif (Array.isArray(_input))\n\t\t{\n\t\t\tif (!_input.length || Array.isArray(_input[0]))\n\t\t\t\treturn serialize(null, _input, _skipEmptyLines);\n\t\t\telse if (typeof _input[0] === 'object')\n\t\t\t\treturn serialize(_columns || Object.keys(_input[0]), _input, _skipEmptyLines);\n\t\t}\n\t\telse if (typeof _input === 'object')\n\t\t{\n\t\t\tif (typeof _input.data === 'string')\n\t\t\t\t_input.data = JSON.parse(_input.data);\n\n\t\t\tif (Array.isArray(_input.data))\n\t\t\t{\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields = _input.meta && _input.meta.fields || _columns;\n\n\t\t\t\tif (!_input.fields)\n\t\t\t\t\t_input.fields =  Array.isArray(_input.data[0])\n\t\t\t\t\t\t? _input.fields\n\t\t\t\t\t\t: typeof _input.data[0] === 'object'\n\t\t\t\t\t\t\t? Object.keys(_input.data[0])\n\t\t\t\t\t\t\t: [];\n\n\t\t\t\tif (!(Array.isArray(_input.data[0])) && typeof _input.data[0] !== 'object')\n\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\n\t\t\t}\n\n\t\t\treturn serialize(_input.fields || [], _input.data || [], _skipEmptyLines);\n\t\t}\n\n\t\t// Default (any valid paths should return before this)\n\t\tthrow new Error('Unable to serialize unrecognized input');\n\n\n\t\tfunction unpackConfig()\n\t\t{\n\t\t\tif (typeof _config !== 'object')\n\t\t\t\treturn;\n\n\t\t\tif (typeof _config.delimiter === 'string'\n                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)\n\t\t\t{\n\t\t\t\t_delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tif (typeof _config.quotes === 'boolean'\n\t\t\t\t|| typeof _config.quotes === 'function'\n\t\t\t\t|| Array.isArray(_config.quotes))\n\t\t\t\t_quotes = _config.quotes;\n\n\t\t\tif (typeof _config.skipEmptyLines === 'boolean'\n\t\t\t\t|| typeof _config.skipEmptyLines === 'string')\n\t\t\t\t_skipEmptyLines = _config.skipEmptyLines;\n\n\t\t\tif (typeof _config.newline === 'string')\n\t\t\t\t_newline = _config.newline;\n\n\t\t\tif (typeof _config.quoteChar === 'string')\n\t\t\t\t_quoteChar = _config.quoteChar;\n\n\t\t\tif (typeof _config.header === 'boolean')\n\t\t\t\t_writeHeader = _config.header;\n\n\t\t\tif (Array.isArray(_config.columns)) {\n\n\t\t\t\tif (_config.columns.length === 0) throw new Error('Option columns is empty');\n\n\t\t\t\t_columns = _config.columns;\n\t\t\t}\n\n\t\t\tif (_config.escapeChar !== undefined) {\n\t\t\t\t_escapedQuote = _config.escapeChar + _quoteChar;\n\t\t\t}\n\n\t\t\tif (_config.escapeFormulae instanceof RegExp) {\n\t\t\t\t_escapeFormulae = _config.escapeFormulae;\n\t\t\t} else if (typeof _config.escapeFormulae === 'boolean' && _config.escapeFormulae) {\n\t\t\t\t_escapeFormulae =  /^[=+\\-@\\t\\r].*$/;\n\t\t\t}\n\t\t}\n\n\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\n\t\tfunction serialize(fields, data, skipEmptyLines)\n\t\t{\n\t\t\tvar csv = '';\n\n\t\t\tif (typeof fields === 'string')\n\t\t\t\tfields = JSON.parse(fields);\n\t\t\tif (typeof data === 'string')\n\t\t\t\tdata = JSON.parse(data);\n\n\t\t\tvar hasHeader = Array.isArray(fields) && fields.length > 0;\n\t\t\tvar dataKeyedByField = !(Array.isArray(data[0]));\n\n\t\t\t// If there a header row, write it first\n\t\t\tif (hasHeader && _writeHeader)\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < fields.length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (i > 0)\n\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\tcsv += safe(fields[i], i);\n\t\t\t\t}\n\t\t\t\tif (data.length > 0)\n\t\t\t\t\tcsv += _newline;\n\t\t\t}\n\n\t\t\t// Then write out the data\n\t\t\tfor (var row = 0; row < data.length; row++)\n\t\t\t{\n\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\n\n\t\t\t\tvar emptyLine = false;\n\t\t\t\tvar nullLine = hasHeader ? Object.keys(data[row]).length === 0 : data[row].length === 0;\n\t\t\t\tif (skipEmptyLines && !hasHeader)\n\t\t\t\t{\n\t\t\t\t\temptyLine = skipEmptyLines === 'greedy' ? data[row].join('').trim() === '' : data[row].length === 1 && data[row][0].length === 0;\n\t\t\t\t}\n\t\t\t\tif (skipEmptyLines === 'greedy' && hasHeader) {\n\t\t\t\t\tvar line = [];\n\t\t\t\t\tfor (var c = 0; c < maxCol; c++) {\n\t\t\t\t\t\tvar cx = dataKeyedByField ? fields[c] : c;\n\t\t\t\t\t\tline.push(data[row][cx]);\n\t\t\t\t\t}\n\t\t\t\t\temptyLine = line.join('').trim() === '';\n\t\t\t\t}\n\t\t\t\tif (!emptyLine)\n\t\t\t\t{\n\t\t\t\t\tfor (var col = 0; col < maxCol; col++)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (col > 0 && !nullLine)\n\t\t\t\t\t\t\tcsv += _delimiter;\n\t\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\n\t\t\t\t\t\tcsv += safe(data[row][colIdx], col);\n\t\t\t\t\t}\n\t\t\t\t\tif (row < data.length - 1 && (!skipEmptyLines || (maxCol > 0 && !nullLine)))\n\t\t\t\t\t{\n\t\t\t\t\t\tcsv += _newline;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn csv;\n\t\t}\n\n\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\n\t\tfunction safe(str, col)\n\t\t{\n\t\t\tif (typeof str === 'undefined' || str === null)\n\t\t\t\treturn '';\n\n\t\t\tif (str.constructor === Date)\n\t\t\t\treturn JSON.stringify(str).slice(1, 25);\n\n\t\t\tvar needsQuotes = false;\n\n\t\t\tif (_escapeFormulae && typeof str === \"string\" && _escapeFormulae.test(str)) {\n\t\t\t\tstr = \"'\" + str;\n\t\t\t\tneedsQuotes = true;\n\t\t\t}\n\n\t\t\tvar escapedQuoteStr = str.toString().replace(quoteCharRegex, _escapedQuote);\n\n\t\t\tneedsQuotes = needsQuotes\n\t\t\t\t\t\t\t|| _quotes === true\n\t\t\t\t\t\t\t|| (typeof _quotes === 'function' && _quotes(str, col))\n\t\t\t\t\t\t\t|| (Array.isArray(_quotes) && _quotes[col])\n\t\t\t\t\t\t\t|| hasAny(escapedQuoteStr, Papa.BAD_DELIMITERS)\n\t\t\t\t\t\t\t|| escapedQuoteStr.indexOf(_delimiter) > -1\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(0) === ' '\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(escapedQuoteStr.length - 1) === ' ';\n\n\t\t\treturn needsQuotes ? _quoteChar + escapedQuoteStr + _quoteChar : escapedQuoteStr;\n\t\t}\n\n\t\tfunction hasAny(str, substrings)\n\t\t{\n\t\t\tfor (var i = 0; i < substrings.length; i++)\n\t\t\t\tif (str.indexOf(substrings[i]) > -1)\n\t\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\t/** ChunkStreamer is the base prototype for various streamer implementations. */\n\tfunction ChunkStreamer(config)\n\t{\n\t\tthis._handle = null;\n\t\tthis._finished = false;\n\t\tthis._completed = false;\n\t\tthis._halted = false;\n\t\tthis._input = null;\n\t\tthis._baseIndex = 0;\n\t\tthis._partialLine = '';\n\t\tthis._rowCount = 0;\n\t\tthis._start = 0;\n\t\tthis._nextChunk = null;\n\t\tthis.isFirstChunk = true;\n\t\tthis._completeResults = {\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\t\treplaceConfig.call(this, config);\n\n\t\tthis.parseChunk = function(chunk, isFakeChunk)\n\t\t{\n\t\t\t// First chunk pre-processing\n\t\t\tconst skipFirstNLines = parseInt(this._config.skipFirstNLines) || 0;\n\t\t\tif (this.isFirstChunk && skipFirstNLines > 0) {\n\t\t\t\tlet _newline = this._config.newline;\n\t\t\t\tif (!_newline) {\n\t\t\t\t\tconst quoteChar = this._config.quoteChar || '\"';\n\t\t\t\t\t_newline = this._handle.guessLineEndings(chunk, quoteChar);\n\t\t\t\t}\n\t\t\t\tconst splitChunk = chunk.split(_newline);\n\t\t\t\tchunk = [...splitChunk.slice(skipFirstNLines)].join(_newline);\n\t\t\t}\n\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\n\t\t\t{\n\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\n\t\t\t\tif (modifiedChunk !== undefined)\n\t\t\t\t\tchunk = modifiedChunk;\n\t\t\t}\n\t\t\tthis.isFirstChunk = false;\n\t\t\tthis._halted = false;\n\n\t\t\t// Rejoin the line we likely just split in two by chunking the file\n\t\t\tvar aggregate = this._partialLine + chunk;\n\t\t\tthis._partialLine = '';\n\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\n\n\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n\t\t\t\tthis._halted = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar lastIndex = results.meta.cursor;\n\n\t\t\tif (!this._finished)\n\t\t\t{\n\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\n\t\t\t\tthis._baseIndex = lastIndex;\n\t\t\t}\n\n\t\t\tif (results && results.data)\n\t\t\t\tthis._rowCount += results.data.length;\n\n\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\n\n\t\t\tif (IS_PAPA_WORKER)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tresults: results,\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tfinished: finishedIncludingPreview\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\n\t\t\t{\n\t\t\t\tthis._config.chunk(results, this._handle);\n\t\t\t\tif (this._handle.paused() || this._handle.aborted()) {\n\t\t\t\t\tthis._halted = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresults = undefined;\n\t\t\t\tthis._completeResults = undefined;\n\t\t\t}\n\n\t\t\tif (!this._config.step && !this._config.chunk) {\n\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\n\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\n\t\t\t\tthis._completeResults.meta = results.meta;\n\t\t\t}\n\n\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\n\t\t\t\tthis._config.complete(this._completeResults, this._input);\n\t\t\t\tthis._completed = true;\n\t\t\t}\n\n\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\n\t\t\t\tthis._nextChunk();\n\n\t\t\treturn results;\n\t\t};\n\n\t\tthis._sendError = function(error)\n\t\t{\n\t\t\tif (isFunction(this._config.error))\n\t\t\t\tthis._config.error(error);\n\t\t\telse if (IS_PAPA_WORKER && this._config.error)\n\t\t\t{\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\terror: error,\n\t\t\t\t\tfinished: false\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tfunction replaceConfig(config)\n\t\t{\n\t\t\t// Deep-copy the config so we can edit it\n\t\t\tvar configCopy = copy(config);\n\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\n\t\t\tif (!config.step && !config.chunk)\n\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\n\t\t\tthis._handle = new ParserHandle(configCopy);\n\t\t\tthis._handle.streamer = this;\n\t\t\tthis._config = configCopy;\t// persist the copy to the caller\n\t\t}\n\t}\n\n\n\tfunction NetworkStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar xhr;\n\n\t\tif (IS_WORKER)\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t\tthis._chunkLoaded();\n\t\t\t};\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis._nextChunk = function()\n\t\t\t{\n\t\t\t\tthis._readChunk();\n\t\t\t};\n\t\t}\n\n\t\tthis.stream = function(url)\n\t\t{\n\t\t\tthis._input = url;\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tif (this._finished)\n\t\t\t{\n\t\t\t\tthis._chunkLoaded();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\txhr = new XMLHttpRequest();\n\n\t\t\tif (this._config.withCredentials)\n\t\t\t{\n\t\t\t\txhr.withCredentials = this._config.withCredentials;\n\t\t\t}\n\n\t\t\tif (!IS_WORKER)\n\t\t\t{\n\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\n\t\t\txhr.open(this._config.downloadRequestBody ? 'POST' : 'GET', this._input, !IS_WORKER);\n\t\t\t// Headers can only be set when once the request state is OPENED\n\t\t\tif (this._config.downloadRequestHeaders)\n\t\t\t{\n\t\t\t\tvar headers = this._config.downloadRequestHeaders;\n\n\t\t\t\tfor (var headerName in headers)\n\t\t\t\t{\n\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\n\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\txhr.send(this._config.downloadRequestBody);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tthis._chunkError(err.message);\n\t\t\t}\n\n\t\t\tif (IS_WORKER && xhr.status === 0)\n\t\t\t\tthis._chunkError();\n\t\t};\n\n\t\tthis._chunkLoaded = function()\n\t\t{\n\t\t\tif (xhr.readyState !== 4)\n\t\t\t\treturn;\n\n\t\t\tif (xhr.status < 200 || xhr.status >= 400)\n\t\t\t{\n\t\t\t\tthis._chunkError();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Use chunckSize as it may be a diference on reponse lentgh due to characters with more than 1 byte\n\t\t\tthis._start += this._config.chunkSize ? this._config.chunkSize : xhr.responseText.length;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= getFileSize(xhr);\n\t\t\tthis.parseChunk(xhr.responseText);\n\t\t};\n\n\t\tthis._chunkError = function(errorMessage)\n\t\t{\n\t\t\tvar errorText = xhr.statusText || errorMessage;\n\t\t\tthis._sendError(new Error(errorText));\n\t\t};\n\n\t\tfunction getFileSize(xhr)\n\t\t{\n\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\n\t\t\tif (contentRange === null) { // no content range, then finish!\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn parseInt(contentRange.substring(contentRange.lastIndexOf('/') + 1));\n\t\t}\n\t}\n\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tNetworkStreamer.prototype.constructor = NetworkStreamer;\n\n\n\tfunction FileStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tif (!config.chunkSize)\n\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar reader, slice;\n\n\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\n\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\n\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\n\n\t\tthis.stream = function(file)\n\t\t{\n\t\t\tthis._input = file;\n\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\n\n\t\t\tif (usingAsyncReader)\n\t\t\t{\n\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\n\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\n\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\n\t\t\t}\n\t\t\telse\n\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\n\n\t\t\tthis._nextChunk();\t// Starts streaming\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\n\t\t\t\tthis._readChunk();\n\t\t};\n\n\t\tthis._readChunk = function()\n\t\t{\n\t\t\tvar input = this._input;\n\t\t\tif (this._config.chunkSize)\n\t\t\t{\n\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\n\t\t\t\tinput = slice.call(input, this._start, end);\n\t\t\t}\n\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\n\t\t\tif (!usingAsyncReader)\n\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\n\t\t};\n\n\t\tthis._chunkLoaded = function(event)\n\t\t{\n\t\t\t// Very important to increment start each time before handling results\n\t\t\tthis._start += this._config.chunkSize;\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\n\t\t\tthis.parseChunk(event.target.result);\n\t\t};\n\n\t\tthis._chunkError = function()\n\t\t{\n\t\t\tthis._sendError(reader.error);\n\t\t};\n\n\t}\n\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tFileStreamer.prototype.constructor = FileStreamer;\n\n\n\tfunction StringStreamer(config)\n\t{\n\t\tconfig = config || {};\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar remaining;\n\t\tthis.stream = function(s)\n\t\t{\n\t\t\tremaining = s;\n\t\t\treturn this._nextChunk();\n\t\t};\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (this._finished) return;\n\t\t\tvar size = this._config.chunkSize;\n\t\t\tvar chunk;\n\t\t\tif(size) {\n\t\t\t\tchunk = remaining.substring(0, size);\n\t\t\t\tremaining = remaining.substring(size);\n\t\t\t} else {\n\t\t\t\tchunk = remaining;\n\t\t\t\tremaining = '';\n\t\t\t}\n\t\t\tthis._finished = !remaining;\n\t\t\treturn this.parseChunk(chunk);\n\t\t};\n\t}\n\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\n\tStringStreamer.prototype.constructor = StringStreamer;\n\n\n\tfunction ReadableStreamStreamer(config)\n\t{\n\t\tconfig = config || {};\n\n\t\tChunkStreamer.call(this, config);\n\n\t\tvar queue = [];\n\t\tvar parseOnData = true;\n\t\tvar streamHasEnded = false;\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\n\t\t\tthis._input.pause();\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\n\t\t\tthis._input.resume();\n\t\t};\n\n\t\tthis.stream = function(stream)\n\t\t{\n\t\t\tthis._input = stream;\n\n\t\t\tthis._input.on('data', this._streamData);\n\t\t\tthis._input.on('end', this._streamEnd);\n\t\t\tthis._input.on('error', this._streamError);\n\t\t};\n\n\t\tthis._checkIsFinished = function()\n\t\t{\n\t\t\tif (streamHasEnded && queue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tthis._checkIsFinished();\n\t\t\tif (queue.length)\n\t\t\t{\n\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparseOnData = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._streamData = bindFunction(function(chunk)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\n\n\t\t\t\tif (parseOnData)\n\t\t\t\t{\n\t\t\t\t\tparseOnData = false;\n\t\t\t\t\tthis._checkIsFinished();\n\t\t\t\t\tthis.parseChunk(queue.shift());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tthis._streamError(error);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis._streamError = bindFunction(function(error)\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tthis._sendError(error);\n\t\t}, this);\n\n\t\tthis._streamEnd = bindFunction(function()\n\t\t{\n\t\t\tthis._streamCleanUp();\n\t\t\tstreamHasEnded = true;\n\t\t\tthis._streamData('');\n\t\t}, this);\n\n\t\tthis._streamCleanUp = bindFunction(function()\n\t\t{\n\t\t\tthis._input.removeListener('data', this._streamData);\n\t\t\tthis._input.removeListener('end', this._streamEnd);\n\t\t\tthis._input.removeListener('error', this._streamError);\n\t\t}, this);\n\t}\n\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\n\n\n\tfunction DuplexStreamStreamer(_config) {\n\t\tvar Duplex = require('stream').Duplex;\n\t\tvar config = copy(_config);\n\t\tvar parseOnWrite = true;\n\t\tvar writeStreamHasFinished = false;\n\t\tvar parseCallbackQueue = [];\n\t\tvar stream = null;\n\n\t\tthis._onCsvData = function(results)\n\t\t{\n\t\t\tvar data = results.data;\n\t\t\tif (!stream.push(data) && !this._handle.paused()) {\n\t\t\t\t// the writeable consumer buffer has filled up\n\t\t\t\t// so we need to pause until more items\n\t\t\t\t// can be processed\n\t\t\t\tthis._handle.pause();\n\t\t\t}\n\t\t};\n\n\t\tthis._onCsvComplete = function()\n\t\t{\n\t\t\t// node will finish the read stream when\n\t\t\t// null is pushed\n\t\t\tstream.push(null);\n\t\t};\n\n\t\tconfig.step = bindFunction(this._onCsvData, this);\n\t\tconfig.complete = bindFunction(this._onCsvComplete, this);\n\t\tChunkStreamer.call(this, config);\n\n\t\tthis._nextChunk = function()\n\t\t{\n\t\t\tif (writeStreamHasFinished && parseCallbackQueue.length === 1) {\n\t\t\t\tthis._finished = true;\n\t\t\t}\n\t\t\tif (parseCallbackQueue.length) {\n\t\t\t\tparseCallbackQueue.shift()();\n\t\t\t} else {\n\t\t\t\tparseOnWrite = true;\n\t\t\t}\n\t\t};\n\n\t\tthis._addToParseQueue = function(chunk, callback)\n\t\t{\n\t\t\t// add to queue so that we can indicate\n\t\t\t// completion via callback\n\t\t\t// node will automatically pause the incoming stream\n\t\t\t// when too many items have been added without their\n\t\t\t// callback being invoked\n\t\t\tparseCallbackQueue.push(bindFunction(function() {\n\t\t\t\tthis.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));\n\t\t\t\tif (isFunction(callback)) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t}, this));\n\t\t\tif (parseOnWrite) {\n\t\t\t\tparseOnWrite = false;\n\t\t\t\tthis._nextChunk();\n\t\t\t}\n\t\t};\n\n\t\tthis._onRead = function()\n\t\t{\n\t\t\tif (this._handle.paused()) {\n\t\t\t\t// the writeable consumer can handle more data\n\t\t\t\t// so resume the chunk parsing\n\t\t\t\tthis._handle.resume();\n\t\t\t}\n\t\t};\n\n\t\tthis._onWrite = function(chunk, encoding, callback)\n\t\t{\n\t\t\tthis._addToParseQueue(chunk, callback);\n\t\t};\n\n\t\tthis._onWriteComplete = function()\n\t\t{\n\t\t\twriteStreamHasFinished = true;\n\t\t\t// have to write empty string\n\t\t\t// so parser knows its done\n\t\t\tthis._addToParseQueue('');\n\t\t};\n\n\t\tthis.getStream = function()\n\t\t{\n\t\t\treturn stream;\n\t\t};\n\t\tstream = new Duplex({\n\t\t\treadableObjectMode: true,\n\t\t\tdecodeStrings: false,\n\t\t\tread: bindFunction(this._onRead, this),\n\t\t\twrite: bindFunction(this._onWrite, this)\n\t\t});\n\t\tstream.once('finish', bindFunction(this._onWriteComplete, this));\n\t}\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\n\t\tDuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\n\t\tDuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;\n\t}\n\n\n\t// Use one ParserHandle per entire CSV file or string\n\tfunction ParserHandle(_config)\n\t{\n\t\t// One goal is to minimize the use of regular expressions...\n\t\tvar MAX_FLOAT = Math.pow(2, 53);\n\t\tvar MIN_FLOAT = -MAX_FLOAT;\n\t\tvar FLOAT = /^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)([eE][-+]?\\d+)?\\s*$/;\n\t\tvar ISO_DATE = /^((\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z)))$/;\n\t\tvar self = this;\n\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\n\t\tvar _rowCounter = 0;\t// Number of rows that have been parsed so far\n\t\tvar _input;\t\t\t\t// The input being parsed\n\t\tvar _parser;\t\t\t// The core parser being used\n\t\tvar _paused = false;\t// Whether we are paused or not\n\t\tvar _aborted = false;\t// Whether the parser has aborted or not\n\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\n\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\n\t\tvar _results = {\t\t// The last results returned from the parser\n\t\t\tdata: [],\n\t\t\terrors: [],\n\t\t\tmeta: {}\n\t\t};\n\n\t\tif (isFunction(_config.step))\n\t\t{\n\t\t\tvar userStep = _config.step;\n\t\t\t_config.step = function(results)\n\t\t\t{\n\t\t\t\t_results = results;\n\n\t\t\t\tif (needsHeaderRow())\n\t\t\t\t\tprocessResults();\n\t\t\t\telse\t// only call user's step function after header row\n\t\t\t\t{\n\t\t\t\t\tprocessResults();\n\n\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\n\t\t\t\t\tif (_results.data.length === 0)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t_stepCounter += results.data.length;\n\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\n\t\t\t\t\t\t_parser.abort();\n\t\t\t\t\telse {\n\t\t\t\t\t\t_results.data = _results.data[0];\n\t\t\t\t\t\tuserStep(_results, self);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\n\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\n\t\t * when an input comes in multiple chunks, like from a file.\n\t\t */\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\tvar quoteChar = _config.quoteChar || '\"';\n\t\t\tif (!_config.newline)\n\t\t\t\t_config.newline = this.guessLineEndings(input, quoteChar);\n\n\t\t\t_delimiterError = false;\n\t\t\tif (!_config.delimiter)\n\t\t\t{\n\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments, _config.delimitersToGuess);\n\t\t\t\tif (delimGuess.successful)\n\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\n\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\n\t\t\t\t}\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\t\t\telse if(isFunction(_config.delimiter))\n\t\t\t{\n\t\t\t\t_config.delimiter = _config.delimiter(input);\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\n\t\t\t}\n\n\t\t\tvar parserConfig = copy(_config);\n\t\t\tif (_config.preview && _config.header)\n\t\t\t\tparserConfig.preview++;\t// to compensate for header row\n\n\t\t\t_input = input;\n\t\t\t_parser = new Parser(parserConfig);\n\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\n\t\t\tprocessResults();\n\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\n\t\t};\n\n\t\tthis.paused = function()\n\t\t{\n\t\t\treturn _paused;\n\t\t};\n\n\t\tthis.pause = function()\n\t\t{\n\t\t\t_paused = true;\n\t\t\t_parser.abort();\n\n\t\t\t// If it is streaming via \"chunking\", the reader will start appending correctly already so no need to substring,\n\t\t\t// otherwise we can get duplicate content within a row\n\t\t\t_input = isFunction(_config.chunk) ? \"\" : _input.substring(_parser.getCharIndex());\n\t\t};\n\n\t\tthis.resume = function()\n\t\t{\n\t\t\tif(self.streamer._halted) {\n\t\t\t\t_paused = false;\n\t\t\t\tself.streamer.parseChunk(_input, true);\n\t\t\t} else {\n\t\t\t\t// Bugfix: #636 In case the processing hasn't halted yet\n\t\t\t\t// wait for it to halt in order to resume\n\t\t\t\tsetTimeout(self.resume, 3);\n\t\t\t}\n\t\t};\n\n\t\tthis.aborted = function()\n\t\t{\n\t\t\treturn _aborted;\n\t\t};\n\n\t\tthis.abort = function()\n\t\t{\n\t\t\t_aborted = true;\n\t\t\t_parser.abort();\n\t\t\t_results.meta.aborted = true;\n\t\t\tif (isFunction(_config.complete))\n\t\t\t\t_config.complete(_results);\n\t\t\t_input = '';\n\t\t};\n\n\t\tthis.guessLineEndings = function(input, quoteChar)\n\t\t{\n\t\t\tinput = input.substring(0, 1024 * 1024);\t// max length 1 MB\n\t\t\t// Replace all the text inside quotes\n\t\t\tvar re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');\n\t\t\tinput = input.replace(re, '');\n\n\t\t\tvar r = input.split('\\r');\n\n\t\t\tvar n = input.split('\\n');\n\n\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\n\n\t\t\tif (r.length === 1 || nAppearsFirst)\n\t\t\t\treturn '\\n';\n\n\t\t\tvar numWithN = 0;\n\t\t\tfor (var i = 0; i < r.length; i++)\n\t\t\t{\n\t\t\t\tif (r[i][0] === '\\n')\n\t\t\t\t\tnumWithN++;\n\t\t\t}\n\n\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\n\t\t};\n\n\t\tfunction testEmptyLine(s) {\n\t\t\treturn _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;\n\t\t}\n\n\t\tfunction testFloat(s) {\n\t\t\tif (FLOAT.test(s)) {\n\t\t\t\tvar floatValue = parseFloat(s);\n\t\t\t\tif (floatValue > MIN_FLOAT && floatValue < MAX_FLOAT) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction processResults()\n\t\t{\n\t\t\tif (_results && _delimiterError)\n\t\t\t{\n\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\n\t\t\t\t_delimiterError = false;\n\t\t\t}\n\n\t\t\tif (_config.skipEmptyLines)\n\t\t\t{\n\t\t\t\t_results.data = _results.data.filter(function(d) {\n\t\t\t\t\treturn !testEmptyLine(d);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (needsHeaderRow())\n\t\t\t\tfillHeaderFields();\n\n\t\t\treturn applyHeaderAndDynamicTypingAndTransformation();\n\t\t}\n\n\t\tfunction needsHeaderRow()\n\t\t{\n\t\t\treturn _config.header && _fields.length === 0;\n\t\t}\n\n\t\tfunction fillHeaderFields()\n\t\t{\n\t\t\tif (!_results)\n\t\t\t\treturn;\n\n\t\t\tfunction addHeader(header, i)\n\t\t\t{\n\t\t\t\tif (isFunction(_config.transformHeader))\n\t\t\t\t\theader = _config.transformHeader(header, i);\n\n\t\t\t\t_fields.push(header);\n\t\t\t}\n\n\t\t\tif (Array.isArray(_results.data[0]))\n\t\t\t{\n\t\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\n\t\t\t\t\t_results.data[i].forEach(addHeader);\n\n\t\t\t\t_results.data.splice(0, 1);\n\t\t\t}\n\t\t\t// if _results.data[0] is not an array, we are in a step where _results.data is the row.\n\t\t\telse\n\t\t\t\t_results.data.forEach(addHeader);\n\t\t}\n\n\t\tfunction shouldApplyDynamicTyping(field) {\n\t\t\t// Cache function values to avoid calling it for each row\n\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\n\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\n\t\t\t}\n\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\n\t\t}\n\n\t\tfunction parseDynamic(field, value)\n\t\t{\n\t\t\tif (shouldApplyDynamicTyping(field))\n\t\t\t{\n\t\t\t\tif (value === 'true' || value === 'TRUE')\n\t\t\t\t\treturn true;\n\t\t\t\telse if (value === 'false' || value === 'FALSE')\n\t\t\t\t\treturn false;\n\t\t\t\telse if (testFloat(value))\n\t\t\t\t\treturn parseFloat(value);\n\t\t\t\telse if (ISO_DATE.test(value))\n\t\t\t\t\treturn new Date(value);\n\t\t\t\telse\n\t\t\t\t\treturn (value === '' ? null : value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction applyHeaderAndDynamicTypingAndTransformation()\n\t\t{\n\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))\n\t\t\t\treturn _results;\n\n\t\t\tfunction processRow(rowSource, i)\n\t\t\t{\n\t\t\t\tvar row = _config.header ? {} : [];\n\n\t\t\t\tvar j;\n\t\t\t\tfor (j = 0; j < rowSource.length; j++)\n\t\t\t\t{\n\t\t\t\t\tvar field = j;\n\t\t\t\t\tvar value = rowSource[j];\n\n\t\t\t\t\tif (_config.header)\n\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\n\n\t\t\t\t\tif (_config.transform)\n\t\t\t\t\t\tvalue = _config.transform(value,field);\n\n\t\t\t\t\tvalue = parseDynamic(field, value);\n\n\t\t\t\t\tif (field === '__parsed_extra')\n\t\t\t\t\t{\n\t\t\t\t\t\trow[field] = row[field] || [];\n\t\t\t\t\t\trow[field].push(value);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trow[field] = value;\n\t\t\t\t}\n\n\n\t\t\t\tif (_config.header)\n\t\t\t\t{\n\t\t\t\t\tif (j > _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t\telse if (j < _fields.length)\n\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\n\t\t\t\t}\n\n\t\t\t\treturn row;\n\t\t\t}\n\n\t\t\tvar incrementBy = 1;\n\t\t\tif (!_results.data.length || Array.isArray(_results.data[0]))\n\t\t\t{\n\t\t\t\t_results.data = _results.data.map(processRow);\n\t\t\t\tincrementBy = _results.data.length;\n\t\t\t}\n\t\t\telse\n\t\t\t\t_results.data = processRow(_results.data, 0);\n\n\n\t\t\tif (_config.header && _results.meta)\n\t\t\t\t_results.meta.fields = _fields;\n\n\t\t\t_rowCounter += incrementBy;\n\t\t\treturn _results;\n\t\t}\n\n\t\tfunction guessDelimiter(input, newline, skipEmptyLines, comments, delimitersToGuess) {\n\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow, maxFieldCount;\n\n\t\t\tdelimitersToGuess = delimitersToGuess || [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\n\n\t\t\tfor (var i = 0; i < delimitersToGuess.length; i++) {\n\t\t\t\tvar delim = delimitersToGuess[i];\n\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\n\t\t\t\tfieldCountPrevRow = undefined;\n\n\t\t\t\tvar preview = new Parser({\n\t\t\t\t\tcomments: comments,\n\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\tnewline: newline,\n\t\t\t\t\tpreview: 10\n\t\t\t\t}).parse(input);\n\n\t\t\t\tfor (var j = 0; j < preview.data.length; j++) {\n\t\t\t\t\tif (skipEmptyLines && testEmptyLine(preview.data[j])) {\n\t\t\t\t\t\temptyLinesCount++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tvar fieldCount = preview.data[j].length;\n\t\t\t\t\tavgFieldCount += fieldCount;\n\n\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined') {\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\telse if (fieldCount > 0) {\n\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (preview.data.length > 0)\n\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\n\n\t\t\t\tif ((typeof bestDelta === 'undefined' || delta <= bestDelta)\n\t\t\t\t\t&& (typeof maxFieldCount === 'undefined' || avgFieldCount > maxFieldCount) && avgFieldCount > 1.99) {\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t\tbestDelim = delim;\n\t\t\t\t\tmaxFieldCount = avgFieldCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_config.delimiter = bestDelim;\n\n\t\t\treturn {\n\t\t\t\tsuccessful: !!bestDelim,\n\t\t\t\tbestDelimiter: bestDelim\n\t\t\t};\n\t\t}\n\n\t\tfunction addError(type, code, msg, row)\n\t\t{\n\t\t\tvar error = {\n\t\t\t\ttype: type,\n\t\t\t\tcode: code,\n\t\t\t\tmessage: msg\n\t\t\t};\n\t\t\tif(row !== undefined) {\n\t\t\t\terror.row = row;\n\t\t\t}\n\t\t\t_results.errors.push(error);\n\t\t}\n\t}\n\n\t/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */\n\tfunction escapeRegExp(string)\n\t{\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n\t}\n\n\t/** The core parser implements speedy and correct CSV parsing */\n\tfunction Parser(config)\n\t{\n\t\t// Unpack the config object\n\t\tconfig = config || {};\n\t\tvar delim = config.delimiter;\n\t\tvar newline = config.newline;\n\t\tvar comments = config.comments;\n\t\tvar step = config.step;\n\t\tvar preview = config.preview;\n\t\tvar fastMode = config.fastMode;\n\t\tvar quoteChar;\n\t\tvar renamedHeaders = null;\n\t\tvar headerParsed = false;\n\n\t\tif (config.quoteChar === undefined || config.quoteChar === null) {\n\t\t\tquoteChar = '\"';\n\t\t} else {\n\t\t\tquoteChar = config.quoteChar;\n\t\t}\n\t\tvar escapeChar = quoteChar;\n\t\tif (config.escapeChar !== undefined) {\n\t\t\tescapeChar = config.escapeChar;\n\t\t}\n\n\t\t// Delimiter must be valid\n\t\tif (typeof delim !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\n\t\t\tdelim = ',';\n\n\t\t// Comment character must be valid\n\t\tif (comments === delim)\n\t\t\tthrow new Error('Comment character same as delimiter');\n\t\telse if (comments === true)\n\t\t\tcomments = '#';\n\t\telse if (typeof comments !== 'string'\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\n\t\t\tcomments = false;\n\n\t\t// Newline must be valid: \\r, \\n, or \\r\\n\n\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\n\t\t\tnewline = '\\n';\n\n\t\t// We're gonna need these at the Parser scope\n\t\tvar cursor = 0;\n\t\tvar aborted = false;\n\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\n\t\t{\n\t\t\t// For some reason, in Chrome, this speeds things up (!?)\n\t\t\tif (typeof input !== 'string')\n\t\t\t\tthrow new Error('Input must be a string');\n\n\t\t\t// We don't need to compute some of these every time parse() is called,\n\t\t\t// but having them in a more local scope seems to perform better\n\t\t\tvar inputLen = input.length,\n\t\t\t\tdelimLen = delim.length,\n\t\t\t\tnewlineLen = newline.length,\n\t\t\t\tcommentsLen = comments.length;\n\t\t\tvar stepIsFunction = isFunction(step);\n\n\t\t\t// Establish starting state\n\t\t\tcursor = 0;\n\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\n\n\t\t\tif (!input)\n\t\t\t\treturn returnable();\n\n\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\n\t\t\t{\n\t\t\t\tvar rows = input.split(newline);\n\t\t\t\tfor (var i = 0; i < rows.length; i++)\n\t\t\t\t{\n\t\t\t\t\trow = rows[i];\n\t\t\t\t\tcursor += row.length;\n\n\t\t\t\t\tif (i !== rows.length - 1)\n\t\t\t\t\t\tcursor += newline.length;\n\t\t\t\t\telse if (ignoreLastRow)\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tif (comments && row.substring(0, commentsLen) === comments)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = [];\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tpushRow(row.split(delim));\n\t\t\t\t\tif (preview && i >= preview)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata = data.slice(0, preview);\n\t\t\t\t\t\treturn returnable(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\tvar nextDelim = input.indexOf(delim, cursor);\n\t\t\tvar nextNewline = input.indexOf(newline, cursor);\n\t\t\tvar quoteCharRegex = new RegExp(escapeRegExp(escapeChar) + escapeRegExp(quoteChar), 'g');\n\t\t\tvar quoteSearch = input.indexOf(quoteChar, cursor);\n\n\t\t\t// Parser loop\n\t\t\tfor (;;)\n\t\t\t{\n\t\t\t\t// Field has opening quote\n\t\t\t\tif (input[cursor] === quoteChar)\n\t\t\t\t{\n\t\t\t\t\t// Start our search for the closing quote where the cursor is\n\t\t\t\t\tquoteSearch = cursor;\n\n\t\t\t\t\t// Skip the opening quote\n\t\t\t\t\tcursor++;\n\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Find closing quote\n\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\n\n\t\t\t\t\t\t//No other quotes are found - no other delimiters\n\t\t\t\t\t\tif (quoteSearch === -1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!ignoreLastRow) {\n\t\t\t\t\t\t\t\t// No closing quote... what a pity\n\t\t\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\n\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\n\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn finish();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Closing quote at EOF\n\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\n\t\t\t\t\t\t\treturn finish(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\n\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\n\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\n\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(nextDelim !== -1 && nextDelim < (quoteSearch + 1)) {\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, (quoteSearch + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(nextNewline !== -1 && nextNewline < (quoteSearch + 1)) {\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, (quoteSearch + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Check up to nextDelim or nextNewline, whichever is closest\n\t\t\t\t\t\tvar checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);\n\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);\n\n\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'\n\t\t\t\t\t\tif (input.substr(quoteSearch + 1 + spacesBetweenQuoteAndDelimiter, delimLen) === delim)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\n\n\t\t\t\t\t\t\t// If char after following delimiter is not quoteChar, we find next quote char position\n\t\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen] !== quoteChar)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\n\n\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\n\t\t\t\t\t\tif (input.substring(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen) === newline)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\n\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\n\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\t// we search for first quote in next line\n\n\t\t\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\n\t\t\t\t\t\terrors.push({\n\t\t\t\t\t\t\ttype: 'Quotes',\n\t\t\t\t\t\t\tcode: 'InvalidQuotes',\n\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\n\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\n\t\t\t\t\t\t\tindex: cursor\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tquoteSearch++;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Comment found at start of new line\n\t\t\t\tif (comments && row.length === 0 && input.substring(cursor, cursor + commentsLen) === comments)\n\t\t\t\t{\n\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\n\t\t\t\t\t\treturn returnable();\n\t\t\t\t\tcursor = nextNewline + newlineLen;\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\n\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\n\t\t\t\t\tcursor = nextDelim + delimLen;\n\t\t\t\t\t// we look for next delimiter char\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// End of row\n\t\t\t\tif (nextNewline !== -1)\n\t\t\t\t{\n\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\n\t\t\t\t\tsaveRow(nextNewline + newlineLen);\n\n\t\t\t\t\tif (stepIsFunction)\n\t\t\t\t\t{\n\t\t\t\t\t\tdoStep();\n\t\t\t\t\t\tif (aborted)\n\t\t\t\t\t\t\treturn returnable();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (preview && data.length >= preview)\n\t\t\t\t\t\treturn returnable(true);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn finish();\n\n\n\t\t\tfunction pushRow(row)\n\t\t\t{\n\t\t\t\tdata.push(row);\n\t\t\t\tlastCursor = cursor;\n\t\t\t}\n\n\t\t\t/**\n             * checks if there are extra spaces after closing quote and given index without any text\n             * if Yes, returns the number of spaces\n             */\n\t\t\tfunction extraSpaces(index) {\n\t\t\t\tvar spaceLength = 0;\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\n\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\n\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn spaceLength;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the remaining input from cursor to the end into\n\t\t\t * row, saves the row, calls step, and returns the results.\n\t\t\t */\n\t\t\tfunction finish(value)\n\t\t\t{\n\t\t\t\tif (ignoreLastRow)\n\t\t\t\t\treturn returnable();\n\t\t\t\tif (typeof value === 'undefined')\n\t\t\t\t\tvalue = input.substring(cursor);\n\t\t\t\trow.push(value);\n\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\n\t\t\t\tpushRow(row);\n\t\t\t\tif (stepIsFunction)\n\t\t\t\t\tdoStep();\n\t\t\t\treturn returnable();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Appends the current row to the results. It sets the cursor\n\t\t\t * to newCursor and finds the nextNewline. The caller should\n\t\t\t * take care to execute user's step function and check for\n\t\t\t * preview and end parsing if necessary.\n\t\t\t */\n\t\t\tfunction saveRow(newCursor)\n\t\t\t{\n\t\t\t\tcursor = newCursor;\n\t\t\t\tpushRow(row);\n\t\t\t\trow = [];\n\t\t\t\tnextNewline = input.indexOf(newline, cursor);\n\t\t\t}\n\n\t\t\t/** Returns an object with the results, errors, and meta. */\n\t\t\tfunction returnable(stopped)\n\t\t\t{\n\t\t\t\tif (config.header && !baseIndex && data.length && !headerParsed)\n\t\t\t\t{\n\t\t\t\t\tconst result = data[0];\n\t\t\t\t\tconst headerCount = Object.create(null); // To track the count of each base header\n\t\t\t\t\tconst usedHeaders = new Set(result); // To track used headers and avoid duplicates\n\t\t\t\t\tlet duplicateHeaders = false;\n\n\t\t\t\t\tfor (let i = 0; i < result.length; i++) {\n\t\t\t\t\t\tlet header = result[i];\n\t\t\t\t\t\tif (isFunction(config.transformHeader))\n\t\t\t\t\t\t\theader = config.transformHeader(header, i);\n\n\t\t\t\t\t\tif (!headerCount[header]) {\n\t\t\t\t\t\t\theaderCount[header] = 1;\n\t\t\t\t\t\t\tresult[i] = header;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet newHeader;\n\t\t\t\t\t\t\tlet suffixCount = headerCount[header];\n\n\t\t\t\t\t\t\t// Find a unique new header\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\tnewHeader = `${header}_${suffixCount}`;\n\t\t\t\t\t\t\t\tsuffixCount++;\n\t\t\t\t\t\t\t} while (usedHeaders.has(newHeader));\n\n\t\t\t\t\t\t\tusedHeaders.add(newHeader); // Mark this new Header as used\n\t\t\t\t\t\t\tresult[i] = newHeader;\n\t\t\t\t\t\t\theaderCount[header]++;\n\t\t\t\t\t\t\tduplicateHeaders = true;\n\t\t\t\t\t\t\tif (renamedHeaders === null) {\n\t\t\t\t\t\t\t\trenamedHeaders = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trenamedHeaders[newHeader] = header;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tusedHeaders.add(header); // Ensure the original header is marked as used\n\t\t\t\t\t}\n\t\t\t\t\tif (duplicateHeaders) {\n\t\t\t\t\t\tconsole.warn('Duplicate headers found and renamed.');\n\t\t\t\t\t}\n\t\t\t\t\theaderParsed = true;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tdata: data,\n\t\t\t\t\terrors: errors,\n\t\t\t\t\tmeta: {\n\t\t\t\t\t\tdelimiter: delim,\n\t\t\t\t\t\tlinebreak: newline,\n\t\t\t\t\t\taborted: aborted,\n\t\t\t\t\t\ttruncated: !!stopped,\n\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0),\n\t\t\t\t\t\trenamedHeaders: renamedHeaders\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/** Executes the user's step function and resets data & errors. */\n\t\t\tfunction doStep()\n\t\t\t{\n\t\t\t\tstep(returnable());\n\t\t\t\tdata = [];\n\t\t\t\terrors = [];\n\t\t\t}\n\t\t};\n\n\t\t/** Sets the abort flag */\n\t\tthis.abort = function()\n\t\t{\n\t\t\taborted = true;\n\t\t};\n\n\t\t/** Gets the cursor position */\n\t\tthis.getCharIndex = function()\n\t\t{\n\t\t\treturn cursor;\n\t\t};\n\t}\n\n\n\tfunction newWorker()\n\t{\n\t\tif (!Papa.WORKERS_SUPPORTED)\n\t\t\treturn false;\n\n\t\tvar workerUrl = getWorkerBlob();\n\t\tvar w = new global.Worker(workerUrl);\n\t\tw.onmessage = mainThreadReceivedMessage;\n\t\tw.id = workerIdCounter++;\n\t\tworkers[w.id] = w;\n\t\treturn w;\n\t}\n\n\t/** Callback when main thread receives a message */\n\tfunction mainThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\t\tvar worker = workers[msg.workerId];\n\t\tvar aborted = false;\n\n\t\tif (msg.error)\n\t\t\tworker.userError(msg.error, msg.file);\n\t\telse if (msg.results && msg.results.data)\n\t\t{\n\t\t\tvar abort = function() {\n\t\t\t\taborted = true;\n\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\n\t\t\t};\n\n\t\t\tvar handle = {\n\t\t\t\tabort: abort,\n\t\t\t\tpause: notImplemented,\n\t\t\t\tresume: notImplemented\n\t\t\t};\n\n\t\t\tif (isFunction(worker.userStep))\n\t\t\t{\n\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tworker.userStep({\n\t\t\t\t\t\tdata: msg.results.data[i],\n\t\t\t\t\t\terrors: msg.results.errors,\n\t\t\t\t\t\tmeta: msg.results.meta\n\t\t\t\t\t}, handle);\n\t\t\t\t\tif (aborted)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdelete msg.results;\t// free memory ASAP\n\t\t\t}\n\t\t\telse if (isFunction(worker.userChunk))\n\t\t\t{\n\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\n\t\t\t\tdelete msg.results;\n\t\t\t}\n\t\t}\n\n\t\tif (msg.finished && !aborted)\n\t\t\tcompleteWorker(msg.workerId, msg.results);\n\t}\n\n\tfunction completeWorker(workerId, results) {\n\t\tvar worker = workers[workerId];\n\t\tif (isFunction(worker.userComplete))\n\t\t\tworker.userComplete(results);\n\t\tworker.terminate();\n\t\tdelete workers[workerId];\n\t}\n\n\tfunction notImplemented() {\n\t\tthrow new Error('Not implemented.');\n\t}\n\n\t/** Callback when worker thread receives a message */\n\tfunction workerThreadReceivedMessage(e)\n\t{\n\t\tvar msg = e.data;\n\n\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\n\t\t\tPapa.WORKER_ID = msg.workerId;\n\n\t\tif (typeof msg.input === 'string')\n\t\t{\n\t\t\tglobal.postMessage({\n\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\tresults: Papa.parse(msg.input, msg.config),\n\t\t\t\tfinished: true\n\t\t\t});\n\t\t}\n\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\n\t\t{\n\t\t\tvar results = Papa.parse(msg.input, msg.config);\n\t\t\tif (results)\n\t\t\t\tglobal.postMessage({\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\n\t\t\t\t\tresults: results,\n\t\t\t\t\tfinished: true\n\t\t\t\t});\n\t\t}\n\t}\n\n\t/** Makes a deep copy of an array or object (mostly) */\n\tfunction copy(obj)\n\t{\n\t\tif (typeof obj !== 'object' || obj === null)\n\t\t\treturn obj;\n\t\tvar cpy = Array.isArray(obj) ? [] : {};\n\t\tfor (var key in obj)\n\t\t\tcpy[key] = copy(obj[key]);\n\t\treturn cpy;\n\t}\n\n\tfunction bindFunction(f, self)\n\t{\n\t\treturn function() { f.apply(self, arguments); };\n\t}\n\tfunction isFunction(func)\n\t{\n\t\treturn typeof func === 'function';\n\t}\n\n\treturn Papa;\n}));\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1377, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/GitHub/KDT_Dataset/kdt-dashboard-renewal/node_modules/next/dist/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1415, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/GitHub/KDT_Dataset/kdt-dashboard-renewal/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR' with { 'turbopack-transition': 'next-server-utility' }\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: (id: string | number) => unknown\ndeclare const __next_app_load_chunk__: (id: string | number) => Promise<unknown>\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base' with { 'turbopack-transition': 'next-server-utility' }\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AACA,SAASA,kBAAkB,QAAQ,2DAA2D;AAAqC,EAAC;IACzE,wBAAwB;AAWnF,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAEgG,EAAC;IA2BrHiB,UAAU;;;;;;;;;AAlBZ,OAAO,MAAMd,eAAe,6CAAA;IAC1BC,MAAAA,GAASC;IACTC,EAAAA,OAAAA;IAAAA,CAAWC;IAAAA;QACb,EAAC,UAAA;YAAA;YAAA;gBAED,YAAA;oBAAA,CAAc;oBAAA,+BAA0C;qBAAE,wBAAwB;wBAAuB,UAAA,CAAA;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;oBAEzG;iBAAA,0DAA4D;YAC5D;YAAA,IAAO,MAAMC,cAAc,IAAIX,mBAAmB;kBAChDY,QAAAA,CAAAA,CAAY;YAAA;SAAA;;SACVC,MAAMZ,UAAUa,QAAQ;cACxBC,IAAAA;YAAAA,CAAM,GAAA;YAAA;SAAA;cACNC,OAAAA;YAAAA,EAAU,EAAA;YAAA;SAAA;cACV,OAAA;YAAA,IAAA,6BAA2C;YAAA;SAAA;cAC3CC,UAAAA;YAAAA,CAAY,GAAA;YAAA;SAAA;;OACZC,UAAU;QACVC,MAAAA;IAAAA,GAAU,EAAE;CAAA;;;AAKhB,GAAE,GAAA,uBAAA,sBAAA,CAAA","ignoreList":[0],"debugId":null}}]
}