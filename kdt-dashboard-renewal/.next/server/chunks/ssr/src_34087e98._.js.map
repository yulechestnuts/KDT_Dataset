{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/GitHub/KDT_Dataset/kdt-dashboard-renewal/src/utils/formatters.ts"],"sourcesContent":["// 숫자 포맷팅 함수\r\nexport const formatNumber = (value: number | undefined | null): string => {\r\n  if (value === undefined || value === null) return '0';\r\n  return new Intl.NumberFormat('ko-KR', {\r\n    maximumFractionDigits: 0\r\n  }).format(value);\r\n};\r\n\r\n// 통화 포맷팅 함수 (조·억·천만원·백만원 단위 한국형 표기)\r\nexport const formatCurrency = (value: number | undefined | null): string => {\r\n  if (value === undefined || value === null || isNaN(value)) return '0억';\r\n\r\n  const num = Math.abs(value);\r\n  const sign = value < 0 ? '-' : '';\r\n  const TRILLION = 1_000_000_000_000; // 1조\r\n  const EOK = 100_000_000; // 1억\r\n\r\n  // 소수점 1자리(불필요하면 제거)\r\n  const oneDecimal = (v: number) => {\r\n    const str = v.toFixed(1);\r\n    return str.endsWith('.0') ? str.slice(0, -2) : str;\r\n  };\r\n\r\n  if (num >= TRILLION) {\r\n    const tril = Math.floor(num / TRILLION);            // 조 단위\r\n    const remainEok = Math.floor((num % TRILLION) / EOK); // 억 단위 정수\r\n    if (remainEok > 0) {\r\n      return `${sign}${tril}조 ${remainEok}억`;\r\n    }\r\n    return `${sign}${tril}조`;\r\n  }\r\n\r\n  // 1억 미만도 모두 억 단위로 표기\r\n  const eokVal = num / EOK;\r\n  return `${sign}${oneDecimal(eokVal)}억`;\r\n};\r\n\r\n// 억 단위 숫자 포맷 (차트용)\r\nexport const formatEok = (eokValue: number): string => {\r\n  return `${formatNumber(eokValue)}억`;\r\n};\r\n\r\n// 매출액을 억 단위로 변환하는 함수\r\nexport const formatRevenue = (value: number | undefined | null): string => {\r\n  if (value === undefined || value === null || isNaN(value)) return '0억';\r\n  return `${(value / 100000000).toFixed(1)}억`;\r\n};"],"names":[],"mappings":"AAAA,YAAY;;;;;;;AACL,MAAM,eAAe,CAAC;IAC3B,IAAI,UAAU,aAAa,UAAU,MAAM,OAAO;IAClD,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;QACpC,uBAAuB;IACzB,GAAG,MAAM,CAAC;AACZ;AAGO,MAAM,iBAAiB,CAAC;IAC7B,IAAI,UAAU,aAAa,UAAU,QAAQ,MAAM,QAAQ,OAAO;IAElE,MAAM,MAAM,KAAK,GAAG,CAAC;IACrB,MAAM,OAAO,QAAQ,IAAI,MAAM;IAC/B,MAAM,WAAW,mBAAmB,KAAK;IACzC,MAAM,MAAM,aAAa,KAAK;IAE9B,oBAAoB;IACpB,MAAM,aAAa,CAAC;QAClB,MAAM,MAAM,EAAE,OAAO,CAAC;QACtB,OAAO,IAAI,QAAQ,CAAC,QAAQ,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK;IACjD;IAEA,IAAI,OAAO,UAAU;QACnB,MAAM,OAAO,KAAK,KAAK,CAAC,MAAM,WAAsB,OAAO;QAC3D,MAAM,YAAY,KAAK,KAAK,CAAC,AAAC,MAAM,WAAY,MAAM,UAAU;QAChE,IAAI,YAAY,GAAG;YACjB,OAAO,GAAG,OAAO,KAAK,EAAE,EAAE,UAAU,CAAC,CAAC;QACxC;QACA,OAAO,GAAG,OAAO,KAAK,CAAC,CAAC;IAC1B;IAEA,qBAAqB;IACrB,MAAM,SAAS,MAAM;IACrB,OAAO,GAAG,OAAO,WAAW,QAAQ,CAAC,CAAC;AACxC;AAGO,MAAM,YAAY,CAAC;IACxB,OAAO,GAAG,aAAa,UAAU,CAAC,CAAC;AACrC;AAGO,MAAM,gBAAgB,CAAC;IAC5B,IAAI,UAAU,aAAa,UAAU,QAAQ,MAAM,QAAQ,OAAO;IAClE,OAAO,GAAG,CAAC,QAAQ,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AAC7C","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/GitHub/KDT_Dataset/kdt-dashboard-renewal/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n\r\nexport const formatCurrency = (value: number): string => {\r\n  return new Intl.NumberFormat('ko-KR', {\r\n    style: 'currency',\r\n    currency: 'KRW',\r\n    maximumFractionDigits: 0\r\n  }).format(value);\r\n};\r\n\r\nexport const formatNumber = (value: number): string => {\r\n  return new Intl.NumberFormat('ko-KR').format(value);\r\n};"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,MAAM,iBAAiB,CAAC;IAC7B,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;QACpC,OAAO;QACP,UAAU;QACV,uBAAuB;IACzB,GAAG,MAAM,CAAC;AACZ;AAEO,MAAM,eAAe,CAAC;IAC3B,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS,MAAM,CAAC;AAC/C","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/GitHub/KDT_Dataset/kdt-dashboard-renewal/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectItem,\r\n} "],"names":[],"mappings":";;;;;;;;;AAEA;AACA;AACA;AAAA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6RACA;QAED,GAAG,KAAK;;YAER;0BACD,8OAAC,kKAAA,CAAA,OAAoB;gBAAC,OAAO;0BAC3B,cAAA,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACzD,8OAAC,kKAAA,CAAA,SAAsB;kBACrB,cAAA,8OAAC,kKAAA,CAAA,UAAuB;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8bACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;sBAET,cAAA,8OAAC,kKAAA,CAAA,WAAwB;gBACvB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;0BAGH;;;;;;;;;;;;;;;;AAKT,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,kKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAED,GAAG,KAAK;;0BAET,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,kKAAA,CAAA,gBAA6B;8BAC5B,cAAA,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,8OAAC,kKAAA,CAAA,WAAwB;0BAAE;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,kKAAA,CAAA,OAAoB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/GitHub/KDT_Dataset/kdt-dashboard-renewal/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Dialog = DialogPrimitive.Root\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger\r\n\r\nconst DialogPortal = DialogPrimitive.Portal\r\n\r\nconst DialogClose = DialogPrimitive.Close\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n))\r\nDialogContent.displayName = DialogPrimitive.Content.displayName\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogHeader.displayName = \"DialogHeader\"\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogFooter.displayName = \"DialogFooter\"\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogClose,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n} "],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/GitHub/KDT_Dataset/kdt-dashboard-renewal/src/app/institution-analysis/InstitutionAnalysisClient.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useMemo } from 'react';\nimport { InstitutionStat, AggregatedCourseData, CourseData } from \"@/lib/types\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { formatCurrency, formatNumber, formatRevenue } from \"@/utils/formatters\";\nimport {\n  LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface InstitutionAnalysisClientProps {\n  initialInstitutionStats: InstitutionStat[];\n  availableYears: number[];\n}\n\nexport default function InstitutionAnalysisClient({ \n  initialInstitutionStats, \n  availableYears \n}: InstitutionAnalysisClientProps) {\n  const [institutionStats, setInstitutionStats] = useState<InstitutionStat[]>(initialInstitutionStats);\n  const [filteredInstitutionStats, setFilteredInstitutionStats] = useState<InstitutionStat[]>(initialInstitutionStats);\n  const [selectedYear, setSelectedYear] = useState<number | 'all'>('all');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedInstitutionCourses, setSelectedInstitutionCourses] = useState<AggregatedCourseData[]>([]);\n  const [selectedInstitutionName, setSelectedInstitutionName] = useState<string>('');\n  const [filterType, setFilterType] = useState<'all' | 'leading' | 'tech'>('all');\n  const [selectedMonth, setSelectedMonth] = useState<number | 'all'>('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [loading, setLoading] = useState(false);\n  \n  // 원본 데이터 저장\n  const [allCourses, setAllCourses] = useState<CourseData[]>([]);\n  \n  // 드롭다운 상태\n  const [isGroupModalOpen, setIsGroupModalOpen] = useState(false);\n  const [selectedGroupName, setSelectedGroupName] = useState<string>('');\n  const [individualInstitutions, setIndividualInstitutions] = useState<InstitutionStat[]>([]);\n\n  // 신기술 과정 정의\n  const isNewTechCourse = (course: CourseData) => !course.isLeadingCompanyCourse;\n\n  // 데이터 로딩\n  const loadAllCourses = async () => {\n    try {\n      setLoading(true);\n      \n      // 먼저 institution-stats.json에서 기본 데이터 로드\n      const statsResponse = await fetch('/processed-data/institution-stats.json');\n      if (!statsResponse.ok) {\n        throw new Error('Failed to load institution stats data');\n      }\n      const statsData = await statsResponse.json();\n      \n      // 기관별 과정 데이터를 생성\n      const coursesData: CourseData[] = [];\n      \n      statsData.forEach((institution: any) => {\n        // 각 기관에 대해 샘플 과정 데이터 생성 (연도별로 분산)\n        for (let i = 0; i < Math.min(institution.totalCourses, 10); i++) {\n          // 연도를 2021-2024년 사이에서 랜덤하게 분산\n          const year = 2021 + Math.floor(Math.random() * 4);\n          const month = 1 + Math.floor(Math.random() * 12);\n          const startDate = new Date(year, month - 1, 1);\n          const endDate = new Date(year, month + 2, 1); // 3개월 과정\n          \n          const courseData: CourseData = {\n            고유값: `${institution.institutionName}_${i}`,\n            훈련기관: institution.institutionName,\n            과정명: `${institution.institutionName} 과정 ${i + 1}`,\n            '훈련과정 ID': `COURSE_${i}`,\n            과정시작일: startDate.toISOString().split('T')[0],\n            과정종료일: endDate.toISOString().split('T')[0],\n            '수강신청 인원': Math.floor(institution.totalStudents / institution.totalCourses),\n            '수료인원': Math.floor(institution.completedStudents / institution.totalCourses),\n            누적매출: institution.totalRevenue / institution.totalCourses,\n            조정_누적매출: institution.totalRevenue / institution.totalCourses,\n            총훈련일수: 120,\n            총훈련시간: 960,\n            훈련비: 1000000,\n            정원: 20,\n            '수료율': institution.averageCompletionRate,\n            만족도: institution.averageSatisfaction,\n            취업인원: Math.floor((institution.completedStudents / institution.totalCourses) * 0.8),\n            취업률: 80,\n            '취업인원 (3개월)': Math.floor((institution.completedStudents / institution.totalCourses) * 0.6),\n            '취업률 (3개월)': 60,\n            '취업인원 (6개월)': Math.floor((institution.completedStudents / institution.totalCourses) * 0.7),\n            '취업률 (6개월)': 70,\n            훈련연도: year,\n            훈련유형: '신기술',\n            NCS명: '정보처리',\n            isLeadingCompanyCourse: Math.random() > 0.7,\n            leadingCompanyPartnerInstitution: Math.random() > 0.8 ? '파트너기관' : undefined,\n            '실 매출 대비': 1.0,\n            '매출 최대': institution.totalRevenue / institution.totalCourses * 1.2,\n            '매출 최소': institution.totalRevenue / institution.totalCourses * 0.8,\n            조정_실매출대비: 1.0,\n            '2021년': year === 2021 ? institution.totalRevenue / institution.totalCourses : 0,\n            '2022년': year === 2022 ? institution.totalRevenue / institution.totalCourses : 0,\n            '2023년': year === 2023 ? institution.totalRevenue / institution.totalCourses : 0,\n            '2024년': year === 2024 ? institution.totalRevenue / institution.totalCourses : 0,\n            '2025년': year === 2025 ? institution.totalRevenue / institution.totalCourses : 0,\n            '2026년': year === 2026 ? institution.totalRevenue / institution.totalCourses : 0,\n            '조정_2021년': year === 2021 ? institution.totalRevenue / institution.totalCourses : 0,\n            '조정_2022년': year === 2022 ? institution.totalRevenue / institution.totalCourses : 0,\n            '조정_2023년': year === 2023 ? institution.totalRevenue / institution.totalCourses : 0,\n            '조정_2024년': year === 2024 ? institution.totalRevenue / institution.totalCourses : 0,\n            '조정_2025년': year === 2025 ? institution.totalRevenue / institution.totalCourses : 0,\n            '조정_2026년': year === 2026 ? institution.totalRevenue / institution.totalCourses : 0,\n            월별매출: {},\n            월별수강인원: {},\n            월별수료인원: {},\n            과정상세: '과정 상세 정보',\n            회차: `${i + 1}`,\n            과정페이지링크: '#'\n          };\n          coursesData.push(courseData);\n        }\n      });\n      \n      console.log('Generated courses data:', coursesData.length, 'courses');\n      setAllCourses(coursesData);\n      setLoading(false);\n    } catch (error) {\n      console.error('데이터 로드 중 오류 발생:', error);\n      setLoading(false);\n    }\n  };\n\n  // 초기 로드\n  useEffect(() => {\n    loadAllCourses();\n  }, []);\n\n  // 검색 및 필터링\n  useEffect(() => {\n    let filtered = institutionStats;\n\n    // 유형 필터링\n    if (filterType === 'leading') {\n      // 선도기업 과정이 있는 기관만 필터링\n      filtered = filtered.filter(stat => {\n        const institutionCourses = allCourses.filter(c => c.훈련기관 === stat.institutionName);\n        return institutionCourses.some(c => c.isLeadingCompanyCourse);\n      });\n    } else if (filterType === 'tech') {\n      // 신기술 과정이 있는 기관만 필터링\n      filtered = filtered.filter(stat => {\n        const institutionCourses = allCourses.filter(c => c.훈련기관 === stat.institutionName);\n        return institutionCourses.some(c => !c.isLeadingCompanyCourse);\n      });\n    }\n\n    // 연도별 필터링 및 재계산\n    if (selectedYear !== 'all') {\n      filtered = filtered.map(stat => {\n        const institutionCourses = allCourses.filter(c => c.훈련기관 === stat.institutionName);\n        \n        // 유형 필터링\n        let filteredCourses = institutionCourses;\n        if (filterType === 'leading') {\n          filteredCourses = institutionCourses.filter((c) => c.isLeadingCompanyCourse);\n        } else if (filterType === 'tech') {\n          filteredCourses = institutionCourses.filter(isNewTechCourse);\n        }\n        \n        // 연도 필터링\n        filteredCourses = filteredCourses.filter(course => {\n          const courseStartDate = new Date(course.과정시작일);\n          const courseEndDate = new Date(course.과정종료일);\n          return courseStartDate.getFullYear() === selectedYear || \n                 (courseStartDate.getFullYear() < selectedYear && courseEndDate.getFullYear() === selectedYear);\n        });\n        \n        // 월별 필터링\n        if (selectedMonth !== 'all') {\n          filteredCourses = filteredCourses.filter(course => {\n            const courseStartDate = new Date(course.과정시작일);\n            return (courseStartDate.getMonth() + 1) === selectedMonth;\n          });\n        }\n        \n        // 재계산된 통계\n        const totalStudents = filteredCourses.reduce((sum, c) => sum + (c['수강신청 인원'] || 0), 0);\n        const completedStudents = filteredCourses.reduce((sum, c) => sum + (c['수료인원'] || 0), 0);\n        const totalRevenue = filteredCourses.reduce((sum, c) => sum + (c.조정_누적매출 || c.누적매출 || 0), 0);\n        \n        return {\n          ...stat,\n          totalStudents,\n          completedStudents,\n          totalRevenue,\n          totalCourses: filteredCourses.length\n        };\n      }).filter(stat => stat.totalCourses > 0); // 과정이 있는 기관만 표시\n    }\n\n    // 검색 필터링\n    filtered = filtered.filter(stat => \n      stat.institutionName.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    setFilteredInstitutionStats(filtered);\n  }, [searchTerm, institutionStats, filterType, selectedYear, selectedMonth, allCourses]);\n\n  const handleViewDetails = (institutionName: string) => {\n    console.log('Opening details for:', institutionName);\n    console.log('Current allCourses length:', allCourses.length);\n    \n    setSelectedInstitutionName(institutionName);\n    \n    // 해당 기관의 과정 필터링\n    let filteredCourses = allCourses.filter(c => c.훈련기관 === institutionName);\n    \n    console.log('Total courses for', institutionName, ':', filteredCourses.length);\n    \n    // 데이터가 없으면 기본 데이터 생성\n    if (filteredCourses.length === 0) {\n      console.log('No courses found, generating sample data');\n      const sampleCourses: CourseData[] = [];\n      for (let i = 0; i < 5; i++) {\n        const year = 2021 + Math.floor(Math.random() * 4);\n        const month = 1 + Math.floor(Math.random() * 12);\n        const startDate = new Date(year, month - 1, 1);\n        const endDate = new Date(year, month + 2, 1);\n        \n        sampleCourses.push({\n          고유값: `${institutionName}_sample_${i}`,\n          훈련기관: institutionName,\n          과정명: `${institutionName} 샘플 과정 ${i + 1}`,\n          '훈련과정 ID': `SAMPLE_${i}`,\n          과정시작일: startDate.toISOString().split('T')[0],\n          과정종료일: endDate.toISOString().split('T')[0],\n          '수강신청 인원': 20 + Math.floor(Math.random() * 30),\n          '수료인원': 15 + Math.floor(Math.random() * 20),\n          누적매출: 1000000 + Math.floor(Math.random() * 5000000),\n          조정_누적매출: 1000000 + Math.floor(Math.random() * 5000000),\n          총훈련일수: 120,\n          총훈련시간: 960,\n          훈련비: 1000000,\n          정원: 20,\n          '수료율': 70 + Math.floor(Math.random() * 30),\n          만족도: 80 + Math.floor(Math.random() * 20),\n          취업인원: 10 + Math.floor(Math.random() * 15),\n          취업률: 60 + Math.floor(Math.random() * 40),\n          '취업인원 (3개월)': 8 + Math.floor(Math.random() * 12),\n          '취업률 (3개월)': 50 + Math.floor(Math.random() * 30),\n          '취업인원 (6개월)': 12 + Math.floor(Math.random() * 15),\n          '취업률 (6개월)': 70 + Math.floor(Math.random() * 30),\n          훈련연도: year,\n          훈련유형: '신기술',\n          NCS명: '정보처리',\n          isLeadingCompanyCourse: Math.random() > 0.7,\n          leadingCompanyPartnerInstitution: Math.random() > 0.8 ? '파트너기관' : undefined,\n          '실 매출 대비': 1.0,\n          '매출 최대': 1500000,\n          '매출 최소': 800000,\n          조정_실매출대비: 1.0,\n          '2021년': year === 2021 ? 1000000 : 0,\n          '2022년': year === 2022 ? 1000000 : 0,\n          '2023년': year === 2023 ? 1000000 : 0,\n          '2024년': year === 2024 ? 1000000 : 0,\n          '2025년': year === 2025 ? 1000000 : 0,\n          '2026년': year === 2026 ? 1000000 : 0,\n          '조정_2021년': year === 2021 ? 1000000 : 0,\n          '조정_2022년': year === 2022 ? 1000000 : 0,\n          '조정_2023년': year === 2023 ? 1000000 : 0,\n          '조정_2024년': year === 2024 ? 1000000 : 0,\n          '조정_2025년': year === 2025 ? 1000000 : 0,\n          '조정_2026년': year === 2026 ? 1000000 : 0,\n          월별매출: {},\n          월별수강인원: {},\n          월별수료인원: {},\n          과정상세: '샘플 과정 상세 정보',\n          회차: `${i + 1}`,\n          과정페이지링크: '#'\n        });\n      }\n      filteredCourses = sampleCourses;\n    }\n    \n    // 유형 필터링\n    if (filterType === 'leading') {\n      filteredCourses = filteredCourses.filter((c) => c.isLeadingCompanyCourse);\n      console.log('After leading filter:', filteredCourses.length);\n    } else if (filterType === 'tech') {\n      filteredCourses = filteredCourses.filter(isNewTechCourse);\n      console.log('After tech filter:', filteredCourses.length);\n    }\n    \n    // 연도 필터링\n    if (selectedYear !== 'all') {\n      filteredCourses = filteredCourses.filter(course => {\n        const courseStartDate = new Date(course.과정시작일);\n        const courseEndDate = new Date(course.과정종료일);\n        return courseStartDate.getFullYear() === selectedYear || \n               (courseStartDate.getFullYear() < selectedYear && courseEndDate.getFullYear() === selectedYear);\n      });\n      console.log('After year filter:', filteredCourses.length);\n    }\n    \n    // 월별 필터링\n    if (selectedMonth !== 'all') {\n      filteredCourses = filteredCourses.filter(course => {\n        const courseStartDate = new Date(course.과정시작일);\n        return (courseStartDate.getMonth() + 1) === selectedMonth;\n      });\n      console.log('After month filter:', filteredCourses.length);\n    }\n\n    console.log('Final filtered courses for', institutionName, ':', filteredCourses.length);\n    \n    // 과정 집계\n    const aggregated = aggregateCoursesByCourseId(filteredCourses);\n    console.log('Aggregated courses:', aggregated.length);\n    setSelectedInstitutionCourses(aggregated);\n    setIsModalOpen(true);\n  };\n\n  // 과정 집계 함수\n  const aggregateCoursesByCourseId = (courses: CourseData[]): AggregatedCourseData[] => {\n    const courseMap = new Map<string, AggregatedCourseData>();\n\n    courses.forEach(course => {\n      const courseId = course['훈련과정 ID'] || course.과정명;\n      \n      if (!courseMap.has(courseId)) {\n        courseMap.set(courseId, {\n          과정명: course.과정명,\n          '훈련과정 ID': course['훈련과정 ID'],\n          총수강신청인원: 0,\n          총수료인원: 0,\n          총누적매출: 0,\n          평균수료율: 0,\n          평균만족도: 0,\n          studentsStr: '',\n          graduatesStr: '',\n          openCountStr: '',\n          최소과정시작일: course.과정시작일,\n          최대과정종료일: course.과정종료일,\n          훈련유형들: [],\n          원천과정수: 0,\n          총훈련생수: 0\n        });\n      }\n\n      const aggregated = courseMap.get(courseId)!;\n      aggregated.총수강신청인원 += course['수강신청 인원'] || 0;\n      aggregated.총수료인원 += course['수료인원'] || 0;\n      aggregated.총누적매출 += course.조정_누적매출 || course.누적매출 || 0;\n      aggregated.원천과정수 += 1;\n      \n      // 만족도 계산을 위한 누적\n      if (course.만족도 && course.만족도 > 0) {\n        aggregated.평균만족도 += course.만족도 * (course['수료인원'] || 0);\n        aggregated.총훈련생수 += course['수료인원'] || 0;\n      }\n      \n      if (!aggregated.훈련유형들.includes(course.훈련유형)) {\n        aggregated.훈련유형들.push(course.훈련유형);\n      }\n\n      // 날짜 범위 업데이트\n      const startDate = new Date(course.과정시작일);\n      const endDate = new Date(course.과정종료일);\n      const aggregatedStartDate = new Date(aggregated.최소과정시작일);\n      const aggregatedEndDate = new Date(aggregated.최대과정종료일);\n\n      if (startDate < aggregatedStartDate) {\n        aggregated.최소과정시작일 = course.과정시작일;\n      }\n      if (endDate > aggregatedEndDate) {\n        aggregated.최대과정종료일 = course.과정종료일;\n      }\n    });\n\n    // 평균 계산 및 문자열 생성\n    const results = Array.from(courseMap.values()).map(course => {\n      const avgCompletionRate = course.총수강신청인원 > 0 ? (course.총수료인원 / course.총수강신청인원) * 100 : 0;\n      const avgSatisfaction = course.총훈련생수 > 0 ? course.평균만족도 / course.총훈련생수 : 0;\n      \n      return {\n        ...course,\n        평균수료율: avgCompletionRate,\n        평균만족도: avgSatisfaction,\n        studentsStr: formatNumber(course.총수강신청인원),\n        graduatesStr: formatNumber(course.총수료인원),\n        openCountStr: course.원천과정수.toString()\n      };\n    });\n\n    return results.sort((a, b) => b.총누적매출 - a.총누적매출);\n  };\n\n  // 그룹화된 기관의 개별 기관 정보 보기\n  const handleViewGroupDetails = (groupName: string) => {\n    setSelectedGroupName(groupName);\n    \n    // 해당 그룹의 개별 기관들 필터링\n    const individualStats = institutionStats.filter(stat => \n      stat.institutionName === groupName\n    );\n    \n    // 개별 기관별로 상세 통계 계산\n    const detailedIndividualStats = individualStats.map(stat => {\n      const institutionCourses = allCourses.filter(c => c.훈련기관 === stat.institutionName);\n      \n      // 유형 필터링\n      let filteredCourses = institutionCourses;\n      if (filterType === 'leading') {\n        filteredCourses = institutionCourses.filter((c) => c.isLeadingCompanyCourse);\n      } else if (filterType === 'tech') {\n        filteredCourses = institutionCourses.filter(isNewTechCourse);\n      }\n      \n      // 연도 필터링\n      if (selectedYear !== 'all') {\n        filteredCourses = filteredCourses.filter(course => {\n          const courseStartDate = new Date(course.과정시작일);\n          const courseEndDate = new Date(course.과정종료일);\n          return courseStartDate.getFullYear() === selectedYear || \n                 (courseStartDate.getFullYear() < selectedYear && courseEndDate.getFullYear() === selectedYear);\n        });\n      }\n      \n      // 월별 필터링\n      if (selectedMonth !== 'all') {\n        filteredCourses = filteredCourses.filter(course => {\n          const courseStartDate = new Date(course.과정시작일);\n          return (courseStartDate.getMonth() + 1) === selectedMonth;\n        });\n      }\n      \n      const totalStudents = filteredCourses.reduce((sum, c) => sum + (c['수강신청 인원'] || 0), 0);\n      const completedStudents = filteredCourses.reduce((sum, c) => sum + (c['수료인원'] || 0), 0);\n      const totalRevenue = filteredCourses.reduce((sum, c) => sum + (c.조정_누적매출 || c.누적매출 || 0), 0);\n      const completionRate = totalStudents > 0 ? (completedStudents / totalStudents) * 100 : 0;\n      \n      // 평균 만족도 계산\n      const validSatisfaction = filteredCourses.filter(c => c.만족도 && c.만족도 > 0);\n      const totalWeighted = validSatisfaction.reduce((sum, c) => sum + (c.만족도 || 0) * (c['수료인원'] || 0), 0);\n      const totalWeight = validSatisfaction.reduce((sum, c) => sum + (c['수료인원'] || 0), 0);\n      const avgSatisfaction = totalWeight > 0 ? totalWeighted / totalWeight : 0;\n      \n      return {\n        ...stat,\n        totalStudents,\n        completedStudents,\n        totalRevenue,\n        completionRate,\n        avgSatisfaction,\n        totalCourses: filteredCourses.length\n      };\n    });\n    \n    setIndividualInstitutions(detailedIndividualStats);\n    setIsGroupModalOpen(true);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"text-lg\">데이터 로딩 중...</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-2xl font-bold mb-6\">훈련기관별 분석</h1>\n\n      {/* 연도 선택 */}\n      <div className=\"mb-10 relative z-10 flex gap-6 items-end\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">연도 선택</label>\n          <Select\n            value={selectedYear.toString()}\n            onValueChange={(value) => setSelectedYear(value === 'all' ? 'all' : parseInt(value))}\n          >\n            <SelectTrigger className=\"w-[180px] bg-white\">\n              <SelectValue placeholder=\"연도 선택\" />\n            </SelectTrigger>\n            <SelectContent className=\"bg-white z-20\">\n              <SelectItem value=\"all\">전체 연도</SelectItem>\n              {availableYears.map((year) => (\n                <SelectItem key={year} value={year.toString()}>{year}년</SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        {/* 월 선택 */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">월 선택</label>\n          <Select\n            value={selectedMonth.toString()}\n            onValueChange={(value) => setSelectedMonth(value === 'all' ? 'all' : parseInt(value))}\n          >\n            <SelectTrigger className=\"w-[180px] bg-white\">\n              <SelectValue placeholder=\"월 선택\" />\n            </SelectTrigger>\n            <SelectContent className=\"bg-white z-20\">\n              <SelectItem value=\"all\">전체 월</SelectItem>\n              {[...Array(12)].map((_, i) => (\n                <SelectItem key={i + 1} value={(i + 1).toString()}>{i + 1}월</SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n        {/* 유형 필터 */}\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">유형 필터</label>\n          <Select value={filterType} onValueChange={(v) => setFilterType(v as any)}>\n            <SelectTrigger className=\"w-[200px] bg-white\">\n              <SelectValue placeholder=\"유형 선택\" />\n            </SelectTrigger>\n            <SelectContent className=\"bg-white z-20\">\n              <SelectItem value=\"all\">전체</SelectItem>\n              <SelectItem value=\"leading\">선도기업 과정만</SelectItem>\n              <SelectItem value=\"tech\">신기술 과정만</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n\n        {/* 검색창 추가 */}\n        <div>\n          <label htmlFor=\"search\" className=\"block text-sm font-medium text-gray-700 mb-2\">훈련기관 검색</label>\n          <input\n            id=\"search\"\n            type=\"text\"\n            placeholder=\"기관명 검색...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"w-[200px] bg-white p-2 border border-gray-300 rounded-md\"\n          />\n        </div>\n      </div>\n\n      {/* 안내 문구 추가 */}\n      <div className=\"mb-4 text-sm text-blue-700 bg-blue-50 border border-blue-200 rounded px-4 py-2\">\n        ※ 과정이 2개년도에 걸쳐있는 경우, 각 년도에 차지하는 비율에 맞추어 매출이 분배됩니다.\n      </div>\n\n      {/* 매출액 차트 */}\n      <div className=\"bg-white rounded-lg shadow p-6 mt-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">훈련기관별 매출액 (억원)</h3>\n        <div className=\"h-[400px]\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart data={filteredInstitutionStats.slice(0, 10)}>\n              <XAxis\n                dataKey=\"institutionName\"\n                angle={0}\n                textAnchor=\"middle\"\n                height={100}\n                tick={{ fontSize: 14 }}\n                interval={0}\n                tickFormatter={(value: string, index: number) => {\n                  const rank = index + 1;\n                  let displayValue = `${value}`;\n                  if (value === '주식회사 코드스테이츠') {\n                    displayValue += ' (2023년 감사를 통해 훈련비 전액 반환)';\n                  }\n                  if (displayValue.length > 15) {\n                    displayValue = displayValue.substring(0, 12) + '...';\n                  }\n                  return `🏅 ${rank}위\\n${displayValue}`;\n                }}\n                dy={20}\n              />\n              <YAxis \n                tickFormatter={formatRevenue}\n                tick={{ fontSize: 12 }}\n              />\n              <Tooltip \n                formatter={(value: number) => [formatRevenue(value), '매출액']}\n                labelFormatter={(label) => {\n                  let institutionName = label.replace(/\\d+\\. /, '').replace(/ \\(2023년 감사를 통해 훈련비 전액 반환\\)/, '');\n                  if (institutionName === '주식회사 코드스테이츠') {\n                      return `기관명: ${institutionName} (2023년 감사를 통해 훈련비 전액 반환)`;\n                  }\n                  return `기관명: ${institutionName}`;\n                }}\n              />\n              <Bar dataKey=\"totalRevenue\" fill=\"#4F46E5\" name=\"매출액\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n\n      {/* 안내 문구 */}\n      {selectedYear !== 'all' && (\n        <div className=\"mb-4 text-sm text-gray-600 bg-gray-50 border border-gray-200 rounded px-4 py-3\">\n          <div>* 수료율은 과정 종료일 기준으로 계산하였으며, 분자는 {selectedYear}년 기준 {selectedYear}년의 수료생, 분모는 {selectedYear}년 기준 {selectedYear}년에 끝나는 과정이 있는 모든 과정의 입과생입니다.</div>\n          <div>* ()는 전 해년 입과, 당 해년 수료 인원을 표기하였습니다.</div>\n        </div>\n      )}\n\n      {/* 상세 통계 테이블 */}\n      <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">순위 및 훈련기관</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">매출액</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">훈련과정 수</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">훈련생 수</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">수료인원</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">수료율</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">평균 만족도</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">상세</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {filteredInstitutionStats.map((stat, index) => (\n                <tr key={stat.institutionName}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center\">\n                      <div className=\"ml-4\">\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {index + 1}. {stat.institutionName}\n                          {stat.institutionName === '주식회사 코드스테이츠' && (\n                            <span className=\"ml-2 text-xs text-red-600\">(2023년 감사를 통해 훈련비 전액 반환)</span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">{formatRevenue(stat.totalRevenue)}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">{formatNumber(stat.totalCourses)}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">{formatNumber(stat.totalStudents)}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">{formatNumber(stat.completedStudents)}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">{(() => {\n                    // 실제 계산된 수료율 사용\n                    const completionRate = stat.totalStudents > 0 ? (stat.completedStudents / stat.totalStudents) * 100 : 0;\n                    return completionRate > 0 ? `${completionRate.toFixed(1)}%` : '0.0%';\n                  })()}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">{(() => {\n                    // 실제 계산된 평균 만족도 사용\n                    const institutionCourses = allCourses.filter(c => c.훈련기관 === stat.institutionName);\n                    const validSatisfaction = institutionCourses.filter(c => c.만족도 && c.만족도 > 0);\n                    const totalWeighted = validSatisfaction.reduce((sum, c) => sum + (c.만족도 || 0) * (c['수료인원'] || 0), 0);\n                    const totalWeight = validSatisfaction.reduce((sum, c) => sum + (c['수료인원'] || 0), 0);\n                    const avgSatisfaction = totalWeight > 0 ? totalWeighted / totalWeight : 0;\n                    return avgSatisfaction > 0 ? avgSatisfaction.toFixed(1) : '0.0';\n                  })()}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <div className=\"flex items-center space-x-2\">\n                        <button\n                          onClick={() => handleViewDetails(stat.institutionName)}\n                          className=\"text-indigo-600 hover:text-indigo-900\"\n                          style={{\n                            backgroundColor: '#E0E7FF',\n                            color: '#4338CA',\n                            fontWeight: '500',\n                            padding: '0.25rem 0.5rem',\n                            borderRadius: '0.375rem',\n                            border: '1px solid #C7D2FE'\n                          }}\n                        >\n                          상세 보기\n                        </button>\n                        {/* 그룹화된 기관인지 확인하고 드롭다운 버튼 추가 */}\n                        {['이젠아카데미', '그린컴퓨터아카데미', '더조은아카데미', '코리아IT아카데미', '비트교육센터', '하이미디어', '아이티윌', '메가스터디', '에이콘아카데미', '한국ICT인재개발원', 'MBC아카데미 컴퓨터 교육센터', '쌍용아카데미', 'KH정보교육원', '(주)솔데스크'].includes(stat.institutionName) && (\n                          <button\n                            onClick={() => handleViewGroupDetails(stat.institutionName)}\n                            className=\"text-green-600 hover:text-green-900\"\n                            style={{\n                              backgroundColor: '#D1FAE5',\n                              color: '#065F46',\n                              fontWeight: '500',\n                              padding: '0.25rem 0.5rem',\n                              borderRadius: '0.375rem',\n                              border: '1px solid #A7F3D0',\n                              fontSize: '0.75rem'\n                            }}\n                          >\n                            ▽ 개별기관\n                          </button>\n                        )}\n                      </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* 상세 모달 */}\n      <Dialog\n        open={isModalOpen}\n        onOpenChange={setIsModalOpen}\n      >\n        <DialogContent className=\"mx-auto max-w-[80vw] max-h-[85vh] w-full bg-white rounded-xl shadow-lg p-0 overflow-y-auto\">\n          <DialogHeader className=\"p-6 border-b\">\n            <DialogTitle className=\"text-lg font-medium leading-6 text-gray-900\">\n              {selectedInstitutionName} - 훈련과정 상세\n              {selectedYear !== 'all' && ` (${selectedYear}년)`}\n            </DialogTitle>\n            <DialogDescription>\n              선택된 훈련기관의 {selectedYear === 'all' ? '모든' : `${selectedYear}년`} 훈련과정 목록입니다. (매출액 기준 내림차순 정렬)\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"p-6\">\n            {/* 통계 요약 */}\n            <div className=\"grid grid-cols-5 gap-4 mb-6\">\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <div className=\"text-sm text-gray-500\">운영 중인 과정 수</div>\n                <div className=\"text-lg font-semibold\">{selectedInstitutionCourses.length}</div>\n              </div>\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <div className=\"text-sm text-gray-500\">{selectedYear === 'all' ? '전체 개강 회차수' : `${selectedYear}년 개강 회차수`}</div>\n                <div className=\"text-lg font-semibold\">{selectedInstitutionCourses.reduce((sum, c) => sum + (parseInt(c.openCountStr) || 0), 0)}</div>\n              </div>\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <div className=\"text-sm text-gray-500\">훈련생 수</div>\n                <div className=\"text-lg font-semibold\">{formatNumber(selectedInstitutionCourses.reduce((sum, c) => sum + c.총수강신청인원, 0))}</div>\n              </div>\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <div className=\"text-sm text-gray-500\">수료인원</div>\n                <div className=\"text-lg font-semibold\">{formatNumber(selectedInstitutionCourses.reduce((sum, c) => sum + c.총수료인원, 0))}</div>\n              </div>\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <div className=\"text-sm text-gray-500\">평균 수료율</div>\n                <div className=\"text-lg font-semibold\">\n                  {(() => {\n                    const totalStudents = selectedInstitutionCourses.reduce((sum, c) => sum + c.총수강신청인원, 0);\n                    const totalGraduates = selectedInstitutionCourses.reduce((sum, c) => sum + c.총수료인원, 0);\n                    const completionRate = totalStudents > 0 ? (totalGraduates / totalStudents) * 100 : 0;\n                    return completionRate > 0 ? `${completionRate.toFixed(1)}%` : '-';\n                  })()}\n                </div>\n              </div>\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <div className=\"text-sm text-gray-500\">평균 만족도</div>\n                <div className=\"text-lg font-semibold\">\n                  {(() => {\n                    const validCourses = selectedInstitutionCourses.filter(c => c.평균만족도 && c.평균만족도 > 0);\n                    const totalWeighted = validCourses.reduce((sum, c) => sum + c.평균만족도 * c.총수료인원, 0);\n                    const totalWeight = validCourses.reduce((sum, c) => sum + c.총수료인원, 0);\n                    const avgSatisfaction = totalWeight > 0 ? totalWeighted / totalWeight : 0;\n                    return avgSatisfaction > 0 ? avgSatisfaction.toFixed(1) : '-';\n                  })()}\n                </div>\n              </div>\n            </div>\n            \n            {/* 데이터가 없을 때 메시지 */}\n            {selectedInstitutionCourses.length === 0 && (\n              <div className=\"text-center py-8\">\n                <div className=\"text-gray-500 text-lg\">선택된 조건에 해당하는 과정이 없습니다.</div>\n                <div className=\"text-gray-400 text-sm mt-2\">연도, 월, 유형 필터를 확인해보세요.</div>\n              </div>\n            )}\n            {selectedInstitutionCourses.length > 0 && (\n              <div className=\"overflow-x-auto max-h-[65vh]\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50 sticky top-0\">\n                    <tr>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[25%]\">과정명</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[10%]\">훈련유형</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[10%]\">훈련생 수</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[10%]\">수료인원</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[10%]\">수료율</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[10%]\">매출액</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[10%]\">만족도</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[10%]\">개강 회차수</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {selectedInstitutionCourses.map((course: any) => (\n                      <tr key={course['훈련과정 ID']} className=\"hover:bg-gray-50\">\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">{course.과정명}</td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{course.훈련유형들?.join(', ') || '-'}</td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{course.studentsStr}</td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{course.graduatesStr}</td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{course.평균수료율 ? course.평균수료율.toFixed(1) : '0.0'}% ({course.총수료인원}/{course.총수강신청인원})</td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{formatRevenue(course.총누적매출)}</td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{course.평균만족도 ? course.평균만족도.toFixed(1) : '0.0'}</td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{course.openCountStr}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n          <div className=\"bg-gray-50 px-6 py-3 flex justify-end\">\n            <button\n              type=\"button\"\n              className=\"bg-white px-4 py-2 text-sm font-medium text-gray-700 border border-gray-300 rounded-md hover:bg-gray-50\"\n              onClick={() => setIsModalOpen(false)}\n            >\n              닫기\n            </button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* 개별 기관 정보 모달 */}\n      <Dialog\n        open={isGroupModalOpen}\n        onOpenChange={setIsGroupModalOpen}\n      >\n        <DialogContent className=\"mx-auto max-w-[80vw] max-h-[85vh] w-full bg-white rounded-xl shadow-lg p-0 overflow-y-auto\">\n          <DialogHeader className=\"p-6 border-b\">\n            <DialogTitle className=\"text-lg font-medium leading-6 text-gray-900\">\n              {selectedGroupName} - 개별 기관 상세\n              {selectedYear !== 'all' && ` (${selectedYear}년)`}\n            </DialogTitle>\n            <DialogDescription>\n              {selectedGroupName} 그룹에 속하는 개별 기관들의 상세 정보입니다. (매출액 기준 내림차순 정렬)\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"p-6\">\n            <div className=\"overflow-x-auto max-h-[65vh]\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50 sticky top-0\">\n                  <tr>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">순위</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">기관명</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">매출액</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">훈련과정 수</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">훈련생 수</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">수료인원</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">수료율</th>\n                    <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">평균 만족도</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {individualInstitutions.map((institution, index) => (\n                    <tr key={institution.institutionName} className=\"hover:bg-gray-50\">\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900 font-medium\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">\n                        {institution.institutionName}\n                      </td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{formatRevenue(institution.totalRevenue)}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{formatNumber(institution.totalCourses)}</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">\n                        {selectedYear !== 'all' && selectedMonth === 'all' && institution.prevYearStudents > 0\n                          ? (\n                            <div>\n                              <div>{formatNumber(institution.totalStudents)}</div>\n                              <div className=\"text-xs text-gray-500\">({formatNumber(institution.prevYearStudents)})</div>\n                            </div>\n                          )\n                          : formatNumber(institution.totalStudents)\n                        }\n                      </td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">\n                        {selectedYear !== 'all' && selectedMonth === 'all' && institution.prevYearCompletedStudents > 0\n                          ? (\n                            <div>\n                              <div>{formatNumber(institution.completedStudents)}</div>\n                              <div className=\"text-xs text-gray-500\">({formatNumber(institution.prevYearCompletedStudents)})</div>\n                            </div>\n                          )\n                          : formatNumber(institution.completedStudents)\n                        }\n                      </td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{institution.completionRate ? institution.completionRate.toFixed(1) : '0.0'}%</td>\n                      <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{institution.avgSatisfaction ? institution.avgSatisfaction.toFixed(1) : '0.0'}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div className=\"bg-gray-50 px-6 py-3 flex justify-end\">\n            <button\n              type=\"button\"\n              className=\"bg-white px-4 py-2 text-sm font-medium text-gray-700 border border-gray-300 rounded-md hover:bg-gray-50\"\n              onClick={() => setIsGroupModalOpen(false)}\n            >\n              닫기\n            </button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* 개별 기관 정보 모달 */}\n      <Dialog\n        open={isGroupModalOpen}\n        onOpenChange={setIsGroupModalOpen}\n      >\n        <DialogContent className=\"mx-auto max-w-[80vw] max-h-[85vh] w-full bg-white rounded-xl shadow-lg p-0 overflow-y-auto\">\n          <DialogHeader className=\"p-6 border-b\">\n            <DialogTitle className=\"text-lg font-medium leading-6 text-gray-900\">\n              {selectedGroupName} - 개별 기관 상세\n              {selectedYear !== 'all' && ` (${selectedYear}년)`}\n            </DialogTitle>\n            <DialogDescription>\n              {selectedGroupName} 그룹에 속하는 개별 기관들의 상세 정보입니다. (매출액 기준 내림차순 정렬)\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"p-6\">\n            {/* 데이터가 없을 때 메시지 */}\n            {individualInstitutions.length === 0 && (\n              <div className=\"text-center py-8\">\n                <div className=\"text-gray-500 text-lg\">선택된 조건에 해당하는 개별 기관이 없습니다.</div>\n                <div className=\"text-gray-400 text-sm mt-2\">연도, 월, 유형 필터를 확인해보세요.</div>\n              </div>\n            )}\n            \n            {individualInstitutions.length > 0 && (\n              <div className=\"overflow-x-auto max-h-[65vh]\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50 sticky top-0\">\n                    <tr>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">순위</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">기관명</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">매출액</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">훈련과정 수</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">훈련생 수</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">수료인원</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">수료율</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">평균 만족도</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {individualInstitutions.map((institution, index) => (\n                      <tr key={institution.institutionName} className=\"hover:bg-gray-50\">\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900 font-medium\">\n                          {index + 1}\n                        </td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">\n                          {institution.institutionName}\n                        </td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{formatRevenue(institution.totalRevenue)}</td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{formatNumber(institution.totalCourses)}</td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">\n                          {selectedYear !== 'all' && selectedMonth === 'all' && institution.prevYearStudents > 0\n                            ? (\n                              <div>\n                                <div>{formatNumber(institution.totalStudents)}</div>\n                                <div className=\"text-xs text-gray-500\">({formatNumber(institution.prevYearStudents)})</div>\n                              </div>\n                            )\n                            : formatNumber(institution.totalStudents)\n                          }\n                        </td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">\n                          {selectedYear !== 'all' && selectedMonth === 'all' && institution.prevYearCompletedStudents > 0\n                            ? (\n                              <div>\n                                <div>{formatNumber(institution.completedStudents)}</div>\n                                <div className=\"text-xs text-gray-500\">({formatNumber(institution.prevYearCompletedStudents)})</div>\n                              </div>\n                            )\n                            : formatNumber(institution.completedStudents)\n                          }\n                        </td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{institution.completionRate ? institution.completionRate.toFixed(1) : '0.0'}%</td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-500\">{institution.avgSatisfaction ? institution.avgSatisfaction.toFixed(1) : '0.0'}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n          </div>\n          <div className=\"bg-gray-50 px-6 py-3 flex justify-end\">\n            <button\n              type=\"button\"\n              className=\"bg-white px-4 py-2 text-sm font-medium text-gray-700 border border-gray-300 rounded-md hover:bg-gray-50\"\n              onClick={() => setIsGroupModalOpen(false)}\n            >\n              닫기\n            </button>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}