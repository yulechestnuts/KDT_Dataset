{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/GitHub/KDT_Dataset/kdt-dashboard-renewal/src/app/institution-analysis/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useState, useEffect } from 'react';\n\n// 데이터 타입을 정의합니다. (실제 프로젝트에서는 별도 types.ts 파일로 분리하는 것이 좋습니다)\ninterface InstitutionStat {\n  institutionName: string;\n  totalRevenue: number;\n  totalCourses: number;\n  totalStudents: number;\n  completedStudents: number;\n  averageCompletionRate: number;\n  averageSatisfaction: number;\n}\n\n// 로딩 상태를 표시할 간단한 컴포넌트\nconst LoadingSpinner = () => (\n  <div className=\"flex justify-center items-center h-screen\">\n    <div className=\"animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-blue-500\"></div>\n  </div>\n);\n\n// 데이터를 표시할 테이블 컴포넌트 (기존 InstitutionAnalysisClient와 유사한 역할)\nconst InstitutionTable = ({ data }: { data: InstitutionStat[] }) => {\n  if (!data || data.length === 0) {\n    return <p>데이터가 없습니다.</p>;\n  }\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">훈련기관별 분석</h1>\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full bg-white border\">\n          <thead className=\"bg-gray-200\">\n            <tr>\n              <th className=\"py-2 px-4 border-b\">훈련기관</th>\n              <th className=\"py-2 px-4 border-b\">총 매출 (보정)</th>\n              <th className=\"py-2 px-4 border-b\">과정 수</th>\n              <th className=\"py-2 px-4 border-b\">총 학생 수</th>\n              <th className=\"py-2 px-4 border-b\">수료율 (%)</th>\n              <th className=\"py-2 px-4 border-b\">만족도</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((stat, index) => (\n              <tr key={index} className=\"hover:bg-gray-100\">\n                <td className=\"py-2 px-4 border-b\">{stat.institutionName}</td>\n                <td className=\"py-2 px-4 border-b text-right\">{(stat.totalRevenue ?? 0).toLocaleString()}원</td>\n                <td className=\"py-2 px-4 border-b text-right\">{stat.totalCourses ?? 0}</td>\n                <td className=\"py-2 px-4 border-b text-right\">{stat.totalStudents ?? 0}</td>\n                <td className=\"py-2 px-4 border-b text-right\">{(stat.averageCompletionRate ?? 0).toFixed(1)}%</td>\n                <td className=\"py-2 px-4 border-b text-right\">{(stat.averageSatisfaction ?? 0).toFixed(1)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\n// 메인 페이지 컴포넌트\nexport default function InstitutionAnalysisPage() {\n  const [institutionData, setInstitutionData] = useState<InstitutionStat[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        // public 폴더에 미리 가공된 JSON 데이터를 fetch 합니다.\n        const response = await fetch('/processed-data/institution-stats.json');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setInstitutionData(data);\n      } catch (e) {\n        if (e instanceof Error) {\n            setError(e.message);\n        } else {\n            setError('An unknown error occurred');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []); // 컴포넌트 마운트 시 1회만 실행\n\n  if (loading) {\n    return <LoadingSpinner />;\n  }\n\n  if (error) {\n    return <p className=\"text-red-500\">데이터 로딩 중 오류가 발생했습니다: {error}</p>;\n  }\n\n  return <InstitutionTable data={institutionData} />;\n}\n"],"names":[],"mappings":";;;;AAGA;AAFA;;;AAeA,sBAAsB;AACtB,MAAM,iBAAiB,kBACrB,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;;;;;;;;;;AAInB,2DAA2D;AAC3D,MAAM,mBAAmB,CAAC,EAAE,IAAI,EAA+B;IAC7D,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;QAC9B,qBAAO,8OAAC;sBAAE;;;;;;IACZ;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAM,WAAU;;sCACf,8OAAC;4BAAM,WAAU;sCACf,cAAA,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDAAqB;;;;;;kDACnC,8OAAC;wCAAG,WAAU;kDAAqB;;;;;;kDACnC,8OAAC;wCAAG,WAAU;kDAAqB;;;;;;kDACnC,8OAAC;wCAAG,WAAU;kDAAqB;;;;;;kDACnC,8OAAC;wCAAG,WAAU;kDAAqB;;;;;;kDACnC,8OAAC;wCAAG,WAAU;kDAAqB;;;;;;;;;;;;;;;;;sCAGvC,8OAAC;sCACE,KAAK,GAAG,CAAC,CAAC,MAAM,sBACf,8OAAC;oCAAe,WAAU;;sDACxB,8OAAC;4CAAG,WAAU;sDAAsB,KAAK,eAAe;;;;;;sDACxD,8OAAC;4CAAG,WAAU;;gDAAiC,CAAC,KAAK,YAAY,IAAI,CAAC,EAAE,cAAc;gDAAG;;;;;;;sDACzF,8OAAC;4CAAG,WAAU;sDAAiC,KAAK,YAAY,IAAI;;;;;;sDACpE,8OAAC;4CAAG,WAAU;sDAAiC,KAAK,aAAa,IAAI;;;;;;sDACrE,8OAAC;4CAAG,WAAU;;gDAAiC,CAAC,KAAK,qBAAqB,IAAI,CAAC,EAAE,OAAO,CAAC;gDAAG;;;;;;;sDAC5F,8OAAC;4CAAG,WAAU;sDAAiC,CAAC,KAAK,mBAAmB,IAAI,CAAC,EAAE,OAAO,CAAC;;;;;;;mCANhF;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcvB;AAGe,SAAS;IACtB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqB,EAAE;IAC5E,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI;gBACF,WAAW;gBACX,yCAAyC;gBACzC,MAAM,WAAW,MAAM,MAAM;gBAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;gBAC1D;gBACA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,mBAAmB;YACrB,EAAE,OAAO,GAAG;gBACV,IAAI,aAAa,OAAO;oBACpB,SAAS,EAAE,OAAO;gBACtB,OAAO;oBACH,SAAS;gBACb;YACF,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE,GAAG,oBAAoB;IAE5B,IAAI,SAAS;QACX,qBAAO,8OAAC;;;;;IACV;IAEA,IAAI,OAAO;QACT,qBAAO,8OAAC;YAAE,WAAU;;gBAAe;gBAAsB;;;;;;;IAC3D;IAEA,qBAAO,8OAAC;QAAiB,MAAM;;;;;;AACjC","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/GitHub/KDT_Dataset/kdt-dashboard-renewal/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}